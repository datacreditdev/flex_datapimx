<?xml version="1.0" encoding="utf-8"?>
<mx:TitleWindow xmlns:mx="http://www.adobe.com/2006/mxml" xmlns:forms="forms.*" layout="absolute" 
	width="610" height="680" showCloseButton="true" close="cerrar()" xmlns:Forms="OPERAC.Forms.*" 
	creationComplete="initApp()" creationPolicy="all">
	
	<mx:Metadata>
		[Event(name="consultar", type="consultar")]
	</mx:Metadata>
	
	<mx:states>
		<mx:State name="moral">
			<mx:SetProperty target="{cnvOficial}" name="label" value="Segmento Negocio"/>
			<mx:SetProperty target="{cnvAdic}" name="label" value="Inf. Adicional KYC"/>
			<mx:SetProperty target="{formOficialAcred}" name="y" value="10"/>
			<mx:SetProperty target="{formDirAcred}" name="height" value="405"/>
			<mx:SetProperty target="{formDPAcred}" name="width" value="530.5"/>
			<mx:SetProperty target="{formDPAcred}" name="height" value="450"/>
			<mx:SetProperty target="{formDPAcred}" name="x" value="29.25"/>
			<mx:SetProperty target="{formDPAcred}" name="y" value="0"/>
			<mx:SetProperty name="height" value="630"/>
			<mx:SetProperty target="{btnConsBuro}" name="y" value="555"/>
			<mx:SetProperty target="{btnDoc}" name="y" value="555"/>
			<mx:SetProperty target="{btnAceptar}" name="y" value="555"/>
			<mx:SetProperty target="{btnCancelar}" name="y" value="555"/>
			<mx:SetProperty target="{tabNav}" name="height" value="496"/>
			<mx:SetProperty target="{btnAceptar}" name="x" value="508"/>
			<mx:SetProperty target="{btnCancelar}" name="x" value="556"/>
			<mx:SetProperty target="{tabNav}" name="x" value="7.5"/>
			<mx:SetProperty target="{tabNav}" name="y" value="51"/>
		</mx:State>
		<mx:State name="fideicomiso" basedOn="moral">
			<mx:SetProperty target="{cnvDir}" name="label" value="Lugar Constitución"/>
			<mx:SetProperty target="{formPLDAcred}" name="width" value="570"/>
			<mx:SetProperty target="{formPLDAcred}" name="x" value="10"/>
			<mx:SetProperty target="{formPLDAcred}" name="height" value="430"/>
		</mx:State>
	</mx:states>
	<mx:transitions>
		<mx:Transition fromState="*" toState="*">		
			<mx:Parallel>
				<mx:Fade duration="500" target="{cnvDirNeg}"/>
			</mx:Parallel>
		</mx:Transition>
	</mx:transitions>
	
	<mx:Script>
		<![CDATA[
			import mx.controls.CheckBox;
			import CONTROL.CtrlVisorDoc;
			import Data.DatosAcred;
			import Data.EventAcred;
			import Data.Globales;
			import Data.PdfExport;
			import Data.Permisos;
			import Data.Utils;	
			import mx.collections.ArrayCollection;
			import mx.containers.Panel;
			import mx.containers.TitleWindow;	
			import mx.controls.Alert;
			import mx.controls.ComboBox;
			import mx.core.Application;
			import mx.effects.easing.Elastic;
			import mx.events.ListEvent;		
			import mx.managers.PopUpManager;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			import mx.rpc.soap.WebService;
			
			[Bindable]
			private var info:DatosAcred;
			private var _xmlAcred:XML = new XML();
			private var _xmlRepo:XML = new XML();
			
			private var tipoObj:ArrayCollection;
			
			public var tipoAccion:int;
			public var band:Boolean;
			public var grupo:String;
			public var acred:String;
			public var titulo:String;
			private var du:Utils;
			private var global:Globales;
			private var permiso:Permisos;
			private var wsMS:WebService;	
			private var wsCC:WebService; 
			
			//variables que indican los permisos disponibles para el usuario
			public var consBuro:Boolean = new Boolean();
			
			public function cargaInfoAcred(acred:String):void{
				var wsCat:WebService = new WebService;
				var params:Array = new Array;
				
				tipoAccion = 2;
				this.acred = acred;
				this.title = "Edición";
				cboTipoPers.enabled = false;
				permisos();
				
				du.initWsCat(wsCat);
				global.bloquear();
				
				du.ejecutaWsMethod(wsCat,function(evt:ResultEvent):void {											
					_xmlAcred = new XML(evt.result);	
						
					du.closeWs(wsCat);
					global.desbloquear();
					
					if (_xmlAcred.elements().length() > 0)
						llenaRegistros();
					else
						Alert.show("Error en la carga de datos.",titulo,4,null,null,global.iAlert);
				});
				params[0] = acred;
				wsCat.getInfoAcred.send(1, params);	
			}
			
			private function copiaDomicilio(evt:MouseEvent):void{
				var chkMismoDom:CheckBox = evt.currentTarget as CheckBox;
				if(chkMismoDom.selected)
					formDirNegocio.recibeDatos(formDirAcred.copiaDatos());
			}
			
			public function cerrar():void{
				PopUpManager.removePopUp(this);
			}
			
			private function consultaBuro():void{
				tipoAccion = 3;
				this.addEventListener("consultar", procesarConsulta);
				enviar();
			}
			
			public function enviar():void{
				info = new DatosAcred();
				
				if(validaInfo()){
					//Asignacion del Tipo de Persona
					info.tipoPers = cboTipoPers.selectedItem.id;
					formDPAcred.enviarDatosAcred(info);
					formDirAcred.enviarDatosAcred(info);
					formDirNegocio.enviarDatosAcred(info);
					formOficialAcred.enviarOficialAcred(info);
					formPLDAcred.enviarDatosAcred(info);
					validaFinal();
				}
			}
			
			private function formateaTipoPers():void{
				var oItem:Object;
				var item:Array = new Array;
				
				oItem = new Object();
				oItem.nombre = "--Seleccionar--";
				oItem.id = "0";
				item.push(oItem);
				
				oItem = new Object();
				oItem.nombre = "Física";
				oItem.id = "F";
				item.push(oItem);
				
				oItem = new Object();
				oItem.nombre = "Moral";
				oItem.id = "M";
				item.push(oItem);
				
				oItem = new Object();
				oItem.nombre = "Fideicomiso";
				oItem.id = "I";
				item.push(oItem);
				
				tipoObj = new ArrayCollection(item);
			}
			
			public function guardaAcred():void{
				initConexion();
				du.sCursor();
				global.bloquear();
				wsMS.addEventListener(ResultEvent.RESULT, setAccionAcred);
				wsMS.setAccionAcred.send(tipoAccion, global.obtenerUsuario(), this.grupo, info.codigo, 
											 info.cdgco, info.nombre, info.segNombre, info.aPaterno, info.aMaterno, 
											 info.sexo, info.fecha, info.cdgNacPais, info.cdgNacEntFed, info.cdgNac, info.rfc, 
											 info.curp, info.ife, info.fiel, info.calle, info.noInt, info.noExt, info.entreCalles, info.telefono, 
											 info.codPostal, info.cdgPais, info.cdgEntFed, info.entFed, info.cdgMun, info.municipio, info.cdgLoc, 
											 info.localidad, info.cdgCol, info.colonia, info.edoCivil/*, info.nivelEsc, info.depend, 
											 info.marca, info.enano, info.cantEnano*/, info.cdgPr, info.cdgRec, info.calleNeg, info.noIntNeg,
											 info.noExtNeg, info.entreCallesNeg, info.telefonoNeg, info.cdgPaisNeg, info.cdgEntFedNeg, info.cdgMunNeg, 
											 info.cdgLocNeg, info.cdgColNeg, info.tipoPers, info.arrRepLegal, info.giro, info.origen, 
										 	 info.destino, info.otroDesRec, info.pep, info.arrPropReal, info.arrProvRec, info.figura, 
										 	 info.nomCom, info.telefono2, info.email1, info.email2, info.contacto1, info.telCon1, info.emailCon1, 
										 	 info.contacto2, info.telCon2, info.emailCon2, info.finalidad, info.instFiduc, info.patFid, info.aport, 
										 	 info.actVul, info.arrFideicomit, info.arrFideicomis, info.arrDelegado, info.arrApodLegal, 
										 	 info.arrSecOrgGob, info.arrNomOrgGob, info.arrFecNacOrgGob, info.arrTipoComOrgGob);
			}
			
			public function initApp():void{
				du = new Utils();
				global = new Globales();
				permiso = new Permisos();
				titulo = "Mantenimiento de Acreditado";
				formateaTipoPers();
				cboTipoPers.dataProvider = tipoObj;
			}
			
			public function initConexion():void{				
				wsMS = new WebService();			
				wsMS.wsdl = Application.application.wsStr.wsdlServ.toString();
				wsMS.loadWSDL();
			}	
			
			private function initConexionCC():void{
				wsCC = new WebService();			
				wsCC.wsdl = Application.application.wsStr.wsdlCC.toString();
				wsCC.loadWSDL();
			}
			
			public function llenaRegistros():void{
				info = new DatosAcred();
				//Datos personales del Acreditado
				info.codigo = _xmlAcred.Table[0].CODIGO;
				info.nombre = _xmlAcred.Table[0].NOMBRE1;
				info.segNombre = _xmlAcred.Table[0].NOMBRE2;
				info.aPaterno = _xmlAcred.Table[0].PRIMAPE;
				info.aMaterno = _xmlAcred.Table[0].SEGAPE;
				info.tipoPers = _xmlAcred.Table[0].TIPOPERS;
				info.cdgco = _xmlAcred.Table[0].CDGCO;
				info.sexo = _xmlAcred.Table[0].SEXO;
				info.fecha = _xmlAcred.Table[0].NACIMIENTO;
				info.cdgNacPais = _xmlAcred.Table[0].NACIOPAI;
				info.cdgNacEntFed = _xmlAcred.Table[0].NACIOEF;
				info.cdgNac = _xmlAcred.Table[0].NACIONALIDAD;
				info.rfc = _xmlAcred.Table[0].RFC;	
				info.curp = _xmlAcred.Table[0].CURP;
				info.ife = _xmlAcred.Table[0].IFE;
				info.figura = _xmlAcred.Table[0].FIGURA;
				info.nomCom = _xmlAcred.Table[0].NOMCOM;
				info.fiel = _xmlAcred.Table[0].FIEL;
				info.edoCivil = _xmlAcred.Table[0].EDOCIVIL;
				info.telefono = _xmlAcred.Table[0].TELEFONO;
				info.telefono2 = _xmlAcred.Table[0].TELEFONO2;
				info.email1 = _xmlAcred.Table[0].EMAIL1;
				info.email2 = _xmlAcred.Table[0].EMAIL2;
				info.finalidad = _xmlAcred.Table[0].FINALIDAD;
				info.instFiduc = _xmlAcred.Table[0].INSTFIDUC;
				info.patFid = _xmlAcred.Table[0].PATFID;
				info.aport = _xmlAcred.Table[0].APORT;
				
				//Direccion del Acreditado
				info.calle = _xmlAcred.Table[0].CALLE;
				info.noInt = _xmlAcred.Table[0].NOINT;
				info.noExt = _xmlAcred.Table[0].NOEXT;
				info.entreCalles = _xmlAcred.Table[0].ENTRECALLES;
				info.codPostal = _xmlAcred.Table[0].CDGPOSTAL;
				info.cdgPais = _xmlAcred.Table[0].CDGPAI;
				info.pais = _xmlAcred.Table[0].PAIS;
				info.cdgEntFed = _xmlAcred.Table[0].CDGEF;
				info.entFed = _xmlAcred.Table[0].ENTFED;
				info.cdgMun = _xmlAcred.Table[0].CDGMU;
				info.municipio = _xmlAcred.Table[0].MUNIC;
 				info.cdgLoc = _xmlAcred.Table[0].CDGLO; 
				info.localidad = _xmlAcred.Table[0].LOC;
				info.cdgCol = _xmlAcred.Table[0].CDGCOL;
				info.colonia = _xmlAcred.Table[0].COL;
				
				//Direccion del Negocio
				info.calleNeg = _xmlAcred.Table[0].CALLENEG;
				info.noIntNeg = _xmlAcred.Table[0].NOINTNEG;
				info.noExtNeg = _xmlAcred.Table[0].NOEXTNEG;
				info.entreCallesNeg = _xmlAcred.Table[0].ENTRECALLESNEG;
				info.telefonoNeg = _xmlAcred.Table[0].TELEFONONEG;
				info.codPostalNeg = _xmlAcred.Table[0].CDGPOSTALNEG;
				info.cdgPaisNeg = _xmlAcred.Table[0].CDGPAINEG;
				info.paisNeg = _xmlAcred.Table[0].PAISNEG;
				info.cdgEntFedNeg = _xmlAcred.Table[0].CDGEFNEG;
				info.entFedNeg = _xmlAcred.Table[0].ENTFEDNEG;
				info.cdgMunNeg = _xmlAcred.Table[0].CDGMUNEG;
				info.municipioNeg = _xmlAcred.Table[0].MUNICNEG;
 				info.cdgLocNeg = _xmlAcred.Table[0].CDGLONEG; 
				info.localidadNeg = _xmlAcred.Table[0].LOCNEG;
				info.cdgColNeg = _xmlAcred.Table[0].CDGCOLNEG;
				info.coloniaNeg = _xmlAcred.Table[0].COLNEG;
				
				//Otra información del Acreditado
				info.edoCivil = _xmlAcred.Table[0].EDOCIVIL;
				/*info.nivelEsc = _xmlAcred.Table[0].NIVESCOLAR;
				info.depend = _xmlAcred.Table[0].NODEPEND;
				info.marca = _xmlAcred.Table[0].MARCA;
				info.enano = _xmlAcred.Table[0].ENANO;
				info.cantEnano = _xmlAcred.Table[0].CANTENANO;*/
				
				//Oficial de Crédito
				info.cdgPr = _xmlAcred.Table[0].CDGOCPE;
				info.promotor = _xmlAcred.Table[0].PROMOTOR;
				info.cdgRec = _xmlAcred.Table[0].CDGPRPE;
				info.recuperador = _xmlAcred.Table[0].RECUPERADOR;
				info.contacto1 = _xmlAcred.Table[0].CONTACTO1;
				info.telCon1 = _xmlAcred.Table[0].TELCON1;
				info.emailCon1 = _xmlAcred.Table[0].EMAILCON1;
				info.contacto2 = _xmlAcred.Table[0].CONTACTO2;
				info.telCon2 = _xmlAcred.Table[0].TELCON2;
				info.emailCon2 = _xmlAcred.Table[0].EMAILCON2;
				
				//Informacion de Prevencion de Lavado de Dinero
				info.giro = _xmlAcred.Table[0].GIRO;
				info.origen = _xmlAcred.Table[0].CDGORIREC;
				info.destino = _xmlAcred.Table[0].CDGDESREC;
				info.otroDesRec = _xmlAcred.Table[0].OTRODESREC;
				info.pep = _xmlAcred.Table[0].PEP;
				info.actVul = _xmlAcred.Table[0].ACTVUL;
				
				for(var i:int = 0; i < tipoObj.length; i++){
					if(info.tipoPers == tipoObj[i].id.toString()){
						cboTipoPers.selectedIndex = i;
						break;
					}
				}
				
				modificaEstatus();
				formDPAcred.init(info, currentState);
				formDPAcred.cboCoord.addEventListener(ListEvent.CHANGE, selecCoord);
				formDirAcred.init(info);
				formDirNegocio.init(info);
				formDirNegocio.chkMismoDom.addEventListener(MouseEvent.CLICK, copiaDomicilio);
				formOficialAcred.init(info, currentState);
				formPLDAcred.init(info, currentState);
			}
			
			private function modificaEstatus():void{
				tabNav.selectedIndex = 0;
				formDPAcred.asignaEstatus(cboTipoPers.selectedItem.id);
				formOficialAcred.asignaEstatus(cboTipoPers.selectedItem.id);
				formPLDAcred.asignaEstatus(cboTipoPers.selectedItem.id);
				if(cboTipoPers.selectedItem.id == "F"){
					currentState = "";
					formDPAcred.width = 430;
					formDPAcred.height = 510;
				}
				else if(cboTipoPers.selectedItem.id == "M")
					currentState = "moral";
				else if(cboTipoPers.selectedItem.id == "I")
					currentState = "fideicomiso";
			}
			
			private function mostrarDocumentos():void{
				var wsCat:WebService = new WebService;
				var params:Array = new Array;
				var obj:DisplayObject = this.parent;
				
				du.initWsCat(wsCat);
				du.sCursor();
				
				du.ejecutaWsMethod(wsCat, function(evt:ResultEvent):void{
					_xmlRepo = new XML(evt.result);
					
					du.closeWs(wsCat);
					du.rCursor();
					
					if(_xmlRepo.elements().length() > 0){
						var comVisor:CtrlVisorDoc = new CtrlVisorDoc();
						
						comVisor = CtrlVisorDoc(PopUpManager.createPopUp(obj,CtrlVisorDoc,false));
						comVisor.init(info.codigo, _xmlRepo);
						PopUpManager.centerPopUp(comVisor);
					}
					else
						Alert.show("No se encontraron expedientes relacionados con el acreditado.", titulo, 4, null, null, global.iAlert);				
				});
				params[0] = info.codigo;
				wsCat.getInfoRegistro.send(40, params);
			}
			
			public function permisos():void{
				/*var perfil_id:String = global.obtenerCadPerfil();
				
				if (permiso.permisosConsBuro(global.obtenerArrayPerfil())){
					consBuro = true;	
				}
				btnConsBuro.visible = consBuro;*/
			}
			
			private function procesarConsulta(evt:Event):void{
				initConexionCC();
				du.sCursor();
							
				var titulo:String = "Consulta Reporte Crédito";
				var acred:String = formDPAcred.txtCodigo.text;
										
				du.ejecutaWsMethod(wsCC,function(evt:ResultEvent):void{						
					var res:String = evt.result.toString();
						
					du.rCursor();
					du.closeWs(wsCC);
													
					if(res.substr(0,1) == "1"){
						var consulta:String;
						var id:String = "&id=19";
						var tipo:String = "&tipo=C";
						var codAcred:String = "&acred=" + acred;
						var usuario:String = "&usuario=" + global.obtenerUsuario();
						var nomUsuario:String = "&nomUsuario=" + global.obtenerNombreUsuario();
						var sic:String = "&sic=CC";
						
						consulta = global.urlPdf + id + codAcred + usuario + nomUsuario + tipo + sic;		
						var pdfE:PdfExport = new PdfExport();
						pdfE.cargaPdf(consulta);
					}
					else
						Alert.show(res, titulo, 4, null, null, global.iAlert);
						
					this.removeEventListener("consultar", procesarConsulta);
				});
				wsCC.getEjecutaConsulta.send("C", acred, "I", global.obtenerUsuario());
			}
			
			public function registraInfoAcred():void{
				tipoAccion = 1;
				info = null;
				this.title = "Nuevo";
				cboTipoPers.enabled = true;
				formDPAcred.init(info, currentState);
				formDPAcred.cboCoord.addEventListener(ListEvent.CHANGE, selecCoord);
				formDirAcred.init(info);
				formDirNegocio.init(info);
				formDirNegocio.chkMismoDom.addEventListener(MouseEvent.CLICK, copiaDomicilio);
				formOficialAcred.init(info, currentState);
				formPLDAcred.init(info, currentState);
			} 
			
			private function selecCoord(event:ListEvent):void{
				var suc:String = ComboBox(event.currentTarget).selectedItem.id;
				formOficialAcred.asignaSucursal(suc);
				formOficialAcred.cargaPersonal();
			}
			
			private function setAccionAcred(event:ResultEvent):void{
				wsMS.disconnect();
				du.rCursor();
				global.desbloquear();
				wsMS.removeEventListener(ResultEvent.RESULT, setAccionAcred);
				var res:String = event.result.toString();
				var codigo:String;
				if (res.substr(0,1) == "1"){
					if(tipoAccion != 3){
						if(tipoAccion == 1){
							var rSplit:Array = res.toString().split('|');
							codigo = rSplit[1].toString();
							Alert.show("Registro exitoso de acreditado con el código - " + codigo, titulo, 4, null, null, global.iInfo);
						}	
						else
							Alert.show("Proceso finalizado exitosamente.", titulo, 4, null, null, global.iInfo);
						cerrar();
					}
					else
						dispatchEvent(new Event("consultar"));
				}	
				else
					Alert.show(res.substr(2,res.length -1),titulo,4,null,null,global.iAlert);		
			}
			
			public function validaDatosAcred(event:EventAcred):void{
				info = event.customProp;
			}
			
			private function validaInfo():Boolean{
				if(cboTipoPers.selectedIndex == 0){
					Alert.show("Debe seleccionar el Tipo de Persona.", titulo, 4, null, null, global.iAlert);
					return false;
				}
				return true;
			}
			
			public function validaFinal():void{
				if (info.guardaDatos == true && info.guardaDir == true && 
					info.guardaOficial == true && info.guardaKYC){
					validaSituacionAcred();
				}
				else
					Alert.show("Debe capturar los datos requeridos.", titulo, 4, null, null, global.iAlert);
			}
			
			//Funcion que verifica que el usuario no se encuentre 
			//registrado en una solicitud o prestamo vigente 
			public function validaSituacionAcred():void{
				if(tipoAccion == 2){
					var band:Boolean;
					initConexion();
					du.sCursor();
						
					du.ejecutaWsMethod(wsMS,function(evt:ResultEvent):void {											
						var res:String = evt.result.toString();
						
						du.rCursor();
						du.closeWs(wsMS);
						
						if(res.substr(0,1) == "1")
							guardaAcred();
						else
							Alert.show(res.substr(2,res.length -1),titulo,4,null,null,global.iAlert);
					});
					wsMS.getValidaSituacionAcred.send(acred, global.obtenerUsuario());
				}
				else
					guardaAcred();
			}
		]]>
	</mx:Script>
	<mx:TabNavigator id="tabNav" width="591" height="546" x="10" y="52" creationPolicy="all" >
		<mx:Canvas label="Datos Generales" width="100%" height="100%" verticalScrollPolicy="off" horizontalScrollPolicy="off">
			<Forms:FormDatosPerAcredInd id="formDPAcred" x="74.5" height="510" width="440"/>
		</mx:Canvas>
		<mx:Canvas id="cnvDir" label="Domicilio" width="100%" height="100%">	
			<Forms:FormDirAcred id="formDirAcred" x="84.5" height="390" width="420"/>
		</mx:Canvas>
		<mx:Canvas id="cnvDirNeg" label="Dom. Fiscal" width="100%" height="100%">	
			<Forms:FormDirNegocio id="formDirNegocio" x="84.5" width="420"/>
		</mx:Canvas>
		<mx:Canvas id="cnvOficial" label="Origen Comercial" width="100%" height="100%">	
			<Forms:FormOficialAcred id="formOficialAcred" x="94.5"/>
		</mx:Canvas>
		<mx:Canvas id="cnvAdic" label="Inf. Adicional" width="100%" height="100%" verticalScrollPolicy="off" horizontalScrollPolicy="off">
			<Forms:FormPLDAcred id="formPLDAcred" x="44.5" y="10" width="500"/>
		</mx:Canvas>
	</mx:TabNavigator>
	<mx:Button id="btnCancelar" x="556" y="606" icon="@Embed(source='assets/Icon-Delete.png')" click="cerrar()" width="40"/>
	<mx:Button id="btnAceptar" x="508" y="606" icon="@Embed(source='assets/button_ok.png')" click="enviar()" width="40"/>
	<mx:Button id="btnConsBuro" x="10" y="605" click="consultaBuro()" label="Consulta Rep. Crédito" visible="false"/>
	<mx:Button id="btnDoc" x="166" y="605" click="mostrarDocumentos()" label="Ver Documentación" visible="false"/>
	<mx:Label x="144" y="18" text="Tipo Persona:"/>
	<mx:ComboBox id="cboTipoPers" labelField="nombre" x="235" y="16" change="modificaEstatus()"/>
</mx:TitleWindow>