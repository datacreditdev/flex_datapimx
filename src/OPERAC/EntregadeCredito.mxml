<?xml version="1.0" encoding="utf-8"?>
<mx:Canvas xmlns:mx="http://www.adobe.com/2006/mxml" creationComplete="initApp()" width="100%" xmlns:forms="forms.*" 
	xmlns:Data="Data.*" horizontalScrollPolicy="off" creationPolicy="all" xmlns:Administracion="Administracion.*" height="100%">
	<mx:states>
		<mx:State name="evaluacion">
			<mx:SetProperty target="{canvas1}" name="width" value="110"/>
			<mx:SetProperty target="{canvas1}" name="x" value="621"/>
		</mx:State>
	</mx:states>
	
	<!--Componente de mantenimiento de entrega de prestamos Individuales-->
	<mx:Script>
		<![CDATA[
			import Data.Permisos;
			import Data.Utils;
			import mx.controls.DataGrid;
			import mx.controls.dataGridClasses.DataGridItemRenderer;  
			import mx.events.*;  
			import Data.Globales;
			import mx.controls.ComboBox;
			import mx.events.FlexEvent;
			import mx.formatters.SwitchSymbolFormatter;
			import mx.formatters.NumberFormatter;
			import mx.rpc.Fault;
			import mx.rpc.soap.WebService;
			import mx.rpc.events.ResultEvent;
			import mx.rpc.events.FaultEvent;
			import mx.events.DataGridEvent;				
			import mx.events.CloseEvent;	
			import mx.events.ListEvent;	
			import mx.core.Application;
			import mx.containers.TitleWindow;				
			import mx.managers.PopUpManager;
			import mx.controls.Alert;
			import mx.collections.ArrayCollection;
			import mx.effects.easing.Elastic;
			import mx.events.ValidationResultEvent;            

			[Bindable]
			public var dPermisos:XML = new XML();	
			public var _xmlSolic:XML = new XML();
			public var _xmlAcred:XML = new XML();
			
			public var objMtto:Sprite = new Sprite();
			
			public var wsMS:WebService;
			public var titulo:String;
			private var du:Utils;
			private var global:Globales;
			private var permiso:Permisos;
			
			//variables que especifican el indice del elemento 
			//seleccionado al realizar la modificacion del registro
			public var accionSolic:int;
			public var indSolic:int;
			public var vScroll:Number;
			public var res:String;
			
			//variables que indican las opciones disponibles para el usuario
			public var alta:Boolean = new Boolean();
			public var borrado:Boolean = new Boolean();
			public var consulta:Boolean = new Boolean();
			public var edicion:Boolean = new Boolean();
			
			public var comMttoFecha:MttoSelFecha;
			public var comMttoAgrega:MttoAgregaAcred;
			public var comMttoBusq:MttoBusqAcred;
			public var comMttoProyecto:MttoProyecto;
					
			public function activarContSolic(band:Boolean):void{
				btnDatosSolic.enabled = band;
			}
			
			public function activarContModSolic(band:Boolean):void{
				if(edicion == true){	
					btnEditarSolic.enabled = band;
					btnImpEdoCta.enabled = band;
				}
			}
			
			public function actualizarAcred(event:Event):void{
				//buscarListaAcredSolic(1);
			}
			
			public function actualizarPrn(event:Event):void{
				buscarListaPrn(1);
			}
			
			private function buscarAcred():void{
				var wsCat:WebService = new WebService;
				var params:Array = new Array;
				
				btnBuscar.setFocus();
				dgAcred.dataProvider = null;
				
				du.initWsCat(wsCat);
				du.sCursor();
				global.bloquear();
				
				du.ejecutaWsMethod(wsCat,function(evt:ResultEvent):void {											
					_xmlAcred = new XML(evt.result);
					
					du.rCursor();
					du.closeWs(wsCat);
					global.desbloquear();
					
					if (_xmlAcred.elements().length() > 0){
						dgAcred.dataProvider = _xmlAcred.Table;
					}
					seleccionaAcred(); 	
				});
				params[0] = global.obtenerUsuario();
				params[1] = txtCodAcred.text;
				params[2] = txtNombre.text;
				params[3] = txtPaterno.text;
				wsCat.getInfoAcred.send(9, params);	
			}
			
			private function buscarListaPrn(tipo:int):void{
				var wsCat:WebService = new WebService;
				var params:Array = new Array;
				var acred:String = dgAcred.selectedItem.CODIGO;
				
				du.initWsCat(wsCat);
				du.sCursor();
				
			 	if(tipo == 1)
			 		global.bloquear();
			 		
			 	du.ejecutaWsMethod(wsCat,function(evt:ResultEvent):void{	
					_xmlSolic = new XML(evt.result);
					
					du.rCursor();
					du.closeWs(wsCat);
					global.desbloquear();
					
					dgCred.dataProvider = null;
					if (_xmlSolic.elements().length() > 0){
						dgCred.dataProvider = _xmlSolic.Table;
						if (accionSolic == 2){
							dgCred.validateNow();
							dgCred.verticalScrollPosition = vScroll;
							dgCred.selectedIndex = indSolic;
							accionSolic = 0;
						}
					}
					seleccionaSolic();
			 	});
			 	params[0] = acred;
			 	wsCat.getListado.send(36 ,params);
			}
			
			private function formatearMonto(item:Object, column:DataGridColumn):String{
				var result:String;
                result = global.formatearMoneda(item[column.dataField]);
                return result;
			}
			
			private function imprimirEdoCta():void{
				var url:String;
				var codAcred:String;
				var infoCiclo:String;
				var usuario:String;
				var nomUsuario:String;
				
				codAcred = "&acred=" + dgAcred.selectedItem.CODIGO;
				infoCiclo = "&ciclo=" + dgCred.selectedItem.CICLO;
				usuario = "&usuario=" + global.obtenerUsuario();
				nomUsuario = "&nomUsuario=" + global.obtenerNombreUsuario();
				url = global.urlPdf + "&id=4" + codAcred + infoCiclo + usuario + nomUsuario;
				navigateToURL(new URLRequest(url), "_blank");
			}
			
			public function iniVar():void{
				this.indSolic = -1;
				this.vScroll = undefined;
			}
			
			public function initApp():void{
				du = new Utils();
				global = new Globales();
				permiso = new Permisos();
				titulo = "Mantenimiento de Crédito";
				alta = false;
				borrado = false;
				consulta = false;
				edicion = false;
				permisos();
			}
			
			public function initConexion():void{				
				wsMS = new WebService();			
				wsMS.wsdl = Application.application.wsStr.wsdlServ.toString();
				wsMS.loadWSDL();
			}			
			
			public function mostrarFormPrn(tipo:int):void{
				//tipo = 1 NUEVO REGISTRO
				//tipo = 2 MODIFICA REGISTRO
				var acred:String;
				var nomAcred:String;
				var coord:String;
				var nomCoord:String;
				var promotor:String;
				var munic:String;
				var indAcred:int;
				var ciclo:String;
				if(edicion == true){
					var comMttoPrn:MttoPrestamoInd = new MttoPrestamoInd();
					//indAcred = dgAcred.selectedIndex;
					acred = dgAcred.selectedItem.CODIGO;
					nomAcred = dgAcred.selectedItem.NOMBRE_CL;
					coord = dgAcred.selectedItem.CDGCO;
					nomCoord = dgAcred.selectedItem.NOMCO;
					promotor = dgAcred.selectedItem.CDGPRPE;
					munic = dgAcred.selectedItem.MUNIC;
					switch(tipo){
						case 2: 
							if (dgCred.selectedIndex >= 0){
								accionSolic = tipo;					
								comMttoPrn = MttoPrestamoInd(PopUpManager.createPopUp(this,MttoPrestamoInd,true));  
								comMttoPrn.addEventListener(Event.REMOVED_FROM_STAGE, actualizarPrn);
								PopUpManager.centerPopUp(comMttoPrn);
								iniVar();
								this.vScroll = dgCred.verticalScrollPosition;		
								this.indSolic = dgCred.selectedIndex;
								ciclo = dgCred.selectedItem.CICLO;
								comMttoPrn.cargaInfoPrn(acred, nomAcred, ciclo, munic, coord, nomCoord, promotor);
							}
							else
								Alert.show("Debe seleccionar el registro de Crédito", titulo, 4, null, null, global.iAlert); 
							break;
					}
				}
			}
			
			public function permisos():void{
				var ws:WebService = new WebService;
				var mod_id:String = global.obtenerModulo();
				var perfil_id:String = global.obtenerCadPerfil();
				var Params:Array;
				var cont:int;
				
				du.initWs(ws);
				du.sCursor();
					
				du.ejecutaWsMethod(ws,function(evt:ResultEvent):void {											
					dPermisos = new XML(evt.result.toString());
						
					cont = dPermisos.elements().length();
					
					for(var i:int = 0; i < cont; i++){
						switch(dPermisos.Table[i].OPCION.toString()){
							case "C":
								consulta = true;
								if (permiso.permisosModSolic(global.obtenerArrayPerfil())){
									borrado = true;
									alta = true;
									edicion = true;
								}
								break;	
							/*case "B":
								borrado = true;
								break;
							case "I":
								alta = true;
								break;
							case "E":
								edicion = true;
								break;*/
						}
					}
					du.rCursor();
					du.closeWs(ws);					
				});
				Params = new Array();
				Params[0] = perfil_id;
				Params[1] = mod_id;
				ws.ESLoginMethods.send(14,Params);	//Método que indica las opciones disponibles para el usuario	
			}		
			
			public function seleccionaAcred():void{
				dgCred.dataProvider = null;
				if (dgAcred.selectedIndex >= 0){
					activarContSolic(true);
				}
				else
					activarContSolic(false);
			}
			
			public function seleccionaSolic():void{
				if (dgCred.selectedIndex >= 0)
					activarContModSolic(true);
				else
					activarContModSolic(false);
			}
			
			public function validaSituacionSolic(grupo:String):void{
				initConexion();
				du.sCursor();
							
				du.ejecutaWsMethod(wsMS,function(evt:ResultEvent):void {											
					res = evt.result.toString();
								
					du.rCursor();
					du.closeWs(wsMS);
				});
				wsMS.getSituacionSolic.send(grupo);	//Método que indica las opciones disponibles para el usuario
			}
			
		]]>
	</mx:Script>
	<mx:Canvas width="800" height="509" backgroundColor="#FFFFFF" backgroundAlpha="1.0">
		<mx:Canvas id="cnvDetalle" x="18.5" y="84" width="763.5" height="175" cornerRadius="10" borderStyle="solid" borderColor="#7B8B93" visible="true">
			<Data:RowColorDataGrid id="dgAcred" x="10" y="10" width="741.5" height="150" sortableColumns="false" verticalScrollPolicy="auto" 
				horizontalScrollPolicy="auto" itemClick="seleccionaAcred()" doubleClickEnabled="true" itemDoubleClick="buscarListaPrn(1)"> 
				<Data:columns>
					<mx:DataGridColumn headerText="CODIGO" dataField="CODIGO" width="70"/>
					<mx:DataGridColumn headerText="ACREDITADO" dataField="NOMBRE_CL" width="250"/>
					<mx:DataGridColumn headerText="OFICINA" dataField="COORD" width="80"/>
					<mx:DataGridColumn headerText="NOMBRE OFICINA" dataField="NOMCO" width="170"/>
					<mx:DataGridColumn headerText="NOMBRE EJECUTIVO" dataField="NOMASESOR" width="200"/>
				</Data:columns>
			</Data:RowColorDataGrid>
		</mx:Canvas>
		<mx:Label x="18" y="10" text="ACREDITADO" width="247" fontSize="12" fontWeight="bold" fontStyle="italic"/>
		<mx:Canvas x="721" y="39" width="61" height="37" cornerRadius="10" borderStyle="solid" borderColor="#7B8B93" visible="true">
			<mx:Button id="btnBuscar" x="10" y="3" icon="@Embed(source='assets/ico_lupa.png')" click="buscarAcred()" toolTip="Buscar Acreditado" width="40"/>
		</mx:Canvas>
		<mx:Canvas id="cnvDetalle0" x="18.5" y="318" width="763.5" height="181" cornerRadius="10" borderStyle="solid" borderColor="#7B8B93" visible="true" verticalScrollPolicy="off">
			<Data:RowColorDataGrid id="dgCred" x="10" y="10" width="741.5" height="159" sortableColumns="false" resizableColumns="false" 
				verticalScrollPolicy="auto" itemClick="seleccionaSolic()" doubleClickEnabled="true" itemDoubleClick="mostrarFormPrn(2)" 
				horizontalScrollPolicy="off"> 
				<Data:columns>
					<mx:DataGridColumn headerText="CICLO" dataField="CICLO" width="50"/>
					<mx:DataGridColumn headerText="SOLICITUD" dataField="FSOLICITUD" width="90"/>
					<mx:DataGridColumn headerText="FECHA DE ENTREGA" dataField="INICIO" width="140"/>
					<mx:DataGridColumn headerText="MONTO AUTORIZADO" dataField="CANTAUTOR" width="140" labelFunction="formatearMonto"/>
					<mx:DataGridColumn headerText="MONTO ENTREGADO" dataField="CANTENTRE" width="140" labelFunction="formatearMonto"/>
					<mx:DataGridColumn headerText="SITUACION" dataField="SITUACION" width="100"/>
				</Data:columns>
			</Data:RowColorDataGrid>
		</mx:Canvas>
		<mx:Canvas x="627" y="273" width="155" height="37" cornerRadius="10" borderStyle="solid" borderColor="#7B8B93" visible="true" id="canvas1">
			<mx:Button id="btnEditarSolic" x="58" y="3" icon="@Embed(source='assets/edit.png')" enabled="false" click="mostrarFormPrn(2)" toolTip="Editar Solicitud" width="40"/>
			<mx:Button id="btnDatosSolic" x="10" y="3" icon="@Embed(source='assets/folder.png')" click="buscarListaPrn(1)" enabled="false" toolTip="Solicitudes del Acreditado" width="40"/>
			<mx:Button id="btnImpEdoCta" x="106" y="3" icon="@Embed(source='assets/print.png')" enabled="false" click="imprimirEdoCta()" toolTip="Emitir Estado de Cuenta" width="40"/>
		</mx:Canvas>
		<mx:Label x="18.5" y="289" text="CICLO" fontSize="12" fontWeight="bold" fontStyle="italic"/>
		<mx:Canvas x="18" y="39" width="695" height="37" cornerRadius="10" borderStyle="solid" borderColor="#7B8B93" visible="true">
			<mx:Label id="lblCodAcred" x="15" y="7" text="Código:" textAlign="right"/>
			<mx:TextInput id="txtCodAcred" x="64" y="6" width="68" enter="buscarAcred()" maxChars="6" restrict="0-9"/>
			<mx:Label id="lblPaterno" x="470" y="7" text="Apellido Paterno:" textAlign="right"/>
			<mx:TextInput id="txtPaterno" x="564" y="6" width="110" enter="buscarAcred()" maxChars="50"/>
			<mx:Label id="lblNombre" x="158" y="7" text="Nombre/Razón Social:" textAlign="right"/>
			<mx:TextInput id="txtNombre" x="277" y="6" width="170" enter="buscarAcred()" maxChars="50"/>
		</mx:Canvas>
	</mx:Canvas>
</mx:Canvas>