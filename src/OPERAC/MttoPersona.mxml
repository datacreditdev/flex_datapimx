<?xml version="1.0" encoding="utf-8"?>
<mx:TitleWindow xmlns:mx="http://www.adobe.com/2006/mxml" xmlns:forms="forms.*" layout="absolute" width="610" 
	height="660" showCloseButton="true" close="cerrar()" xmlns:Forms="OPERAC.Forms.*" creationComplete="initApp()" 
	creationPolicy="all">
	<mx:states>
		<mx:State name="moral">
			<mx:SetProperty target="{formDatosPers}" name="width" value="510"/>
			<mx:SetProperty target="{formDatosPers}" name="x" value="39.5"/>
			<mx:SetProperty target="{btnAceptar}" name="y" value="518"/>
			<mx:SetProperty target="{btnCancelar}" name="y" value="518"/>
			<mx:SetProperty target="{btnConsBuro}" name="y" value="518"/>
			<mx:SetProperty target="{btnDoc}" name="y" value="518"/>
			<mx:SetProperty target="{formDatosPers}" name="height" value="420"/>
			<mx:SetProperty target="{tabNav}" name="height" value="460"/>
			<mx:SetProperty name="height" value="590"/>
		</mx:State>
	</mx:states>
	<mx:transitions>
		<mx:Transition fromState="*" toState="*">		
			<mx:Parallel>
				<mx:Fade duration="500" target="{this}"/>
			</mx:Parallel>
		</mx:Transition>
	</mx:transitions>
	
	<mx:Script>
		<![CDATA[
			import mx.controls.CheckBox;
			import Data.EventPersona;
			import Data.DatosPersona;
			import Data.Globales;
			import Data.Utils;
			import mx.collections.ArrayCollection;
			import mx.containers.TitleWindow;	
			import mx.controls.Alert;
			import mx.core.Application;		
			import mx.managers.PopUpManager;
			import mx.effects.easing.Elastic;
			import mx.rpc.soap.WebService;
			import mx.rpc.events.ResultEvent;
			import mx.rpc.events.FaultEvent;
			
			[Bindable]
			private var info:DatosPersona;
			private var _xmlPers:XML = new XML();
			private var tipoObj:ArrayCollection;
			
			private var du:Utils;
			private var global:Globales;
			
			public var wsMS:WebService;	
			public var tipoAccion:int;
			public var bandMod:Boolean;
			public var pers:String;
			public var titulo:String;
			
			public function cargaInfoPersona(pers:String):void{
				var wsCat:WebService = new WebService;
				var params:Array = new Array;
				
				tipoAccion = 2;
				this.title = "Edición";
				this.pers = pers;
				cboTipoPers.enabled = false;
				
				du.initWsCat(wsCat);
				du.sCursor();
				global.bloquear();
				
				du.ejecutaWsMethod(wsCat,function(evt:ResultEvent):void {											
					_xmlPers = new XML(evt.result);	
						
					du.closeWs(wsCat);
					du.rCursor();
					global.desbloquear();
					
					if (_xmlPers.elements().length() > 0){
						if(_xmlPers.Table[0].BLOQUEO == "S"){
							bandMod = false;
							du.mostrarMensaje("No es posible modificar el registro de la persona debido a que se encuentra bloqueado.",titulo, 4, null, null, global.iAlert);
						}
						llenaRegistros();
					}
					else
						du.mostrarMensaje("Error en la carga de Datos",titulo,4,null,null,global.iAlert);
				});
				params[0] = pers;
				wsCat.getInfoRegistro.send(31, params);
			}
			
			public function cerrar():void{
				PopUpManager.removePopUp(this);
			}
			
			private function consultarBuro():void{
				
			}
			
			private function copiarDomicilio(evt:MouseEvent):void{
				var chkMismoDom:CheckBox = evt.currentTarget as CheckBox;
				if(chkMismoDom.selected)
					formDirNegPers.recibeDatos(formDirPers.copiarDatos());
			}
			
			private function enviar():void{
				info = new DatosPersona();
				
				if(bandMod){
					if(validarInfo()){
						info.tipoPers = cboTipoPers.selectedItem.id;
						formDatosPers.enviarDatosPersona(info);
						formDirPers.enviarDatosPersona(info);
						formDirNegPers.enviarDatosPersona(info);
						formKYCPers.enviarDatosPersona(info);
						formPLDPers.enviarDatosPersona(info);
						validaFinal();
					}
				}
				else
					du.mostrarMensaje("No es posible modificar el registro de persona.", titulo, 4, null, null, global.iAlert);
			}
			
			private function formateaTipoPers():void{
				var oItem:Object;
				var item:Array = new Array;
				
				oItem = new Object();
				oItem.nombre = "--Seleccionar--";
				oItem.id = "0";
				item.push(oItem);
				
				oItem = new Object();
				oItem.nombre = "Física";
				oItem.id = "F";
				item.push(oItem);
				
				oItem = new Object();
				oItem.nombre = "Moral";
				oItem.id = "M";
				item.push(oItem);
				
				tipoObj = new ArrayCollection(item);
			}
			
			public function guardaPersona():void{
				initConexion();
				du.sCursor();
				global.bloquear();
				wsMS.addEventListener(ResultEvent.RESULT, setAccionPersona);
				wsMS.setAccionPersona.send(tipoAccion, global.obtenerUsuario(), 
											 info.codigo, info.nombre, info.segNombre, info.aPaterno, 
											 info.aMaterno, info.figura, info.nomCom, info.sexo, info.fecha, 
											 info.cdgNacPais, info.cdgNacEntFed, info.cdgNac, info.rfc, info.curp, 
											 info.ife, info.fiel, info.edoCivil, info.email1, info.email2, info.telefono,
											 info.telefono2, info.calle, info.noExt, info.noInt, info.entreCalles, info.cdgPais, 
											 info.codPostal, info.cdgEntFed, info.cdgMun, info.cdgLoc, info.cdgCol, info.calleNeg, 
											 info.noExtNeg, info.noIntNeg, info.entreCallesNeg, info.cdgPaisNeg, info.cdgEntFedNeg, 
											 info.cdgMunNeg, info.cdgLocNeg, info.cdgColNeg, info.tipoPers, info.arrRepLegal, 
											 info.giro, info.origen, info.destino, info.otroDesRec, info.pep, info.arrPropReal, 
										 	 info.arrProvRec, info.puesto, info.puestoDesc, info.periodo, info.puestoFam, info.nomFam,
										 	 info.parentescoFam, info.puestoDescFam, info.periodoFam);
			}
			
			public function initApp():void{
				global = new Globales();
				du = new Utils();
				titulo = "Mantenimiento de Persona";
				formateaTipoPers();
				cboTipoPers.dataProvider = tipoObj;
			}
			
			public function initConexion():void{				
				wsMS = new WebService();			
				wsMS.wsdl = Application.application.wsStr.wsdlServ.toString();
				wsMS.loadWSDL();
			}	
			
			private function llenaRegistros():void{
				info = new DatosPersona();
				//Datos personales
				info.codigo = _xmlPers.Table[0].CODIGO;
				info.nombre = _xmlPers.Table[0].NOMBRE1;
				info.segNombre = _xmlPers.Table[0].NOMBRE2;
				info.aPaterno = _xmlPers.Table[0].PRIMAPE;
				info.aMaterno = _xmlPers.Table[0].SEGAPE;
				info.tipoPers = _xmlPers.Table[0].TIPOPERS;
				info.sexo = _xmlPers.Table[0].SEXO;
				info.fecha = _xmlPers.Table[0].FECNAC
				info.cdgNacPais = _xmlPers.Table[0].NACIOPAI;
				info.cdgNacEntFed = _xmlPers.Table[0].NACIOEF;
				info.cdgNac = _xmlPers.Table[0].NACIONALIDAD;
				info.rfc = _xmlPers.Table[0].RFC;	
				info.curp = _xmlPers.Table[0].CURP;
				info.ife = _xmlPers.Table[0].IFE;
				info.figura = _xmlPers.Table[0].FIGURA;
				info.nomCom = _xmlPers.Table[0].NOMCOM;
				info.fiel = _xmlPers.Table[0].FIEL;
				info.edoCivil = _xmlPers.Table[0].EDOCIVIL;
				info.telefono = _xmlPers.Table[0].TELEFONO;
				info.telefono2 = _xmlPers.Table[0].TELEFONO2;
				info.email1 = _xmlPers.Table[0].EMAIL1;
				info.email2 = _xmlPers.Table[0].EMAIL2;
				
				//Direccion
				info.calle = _xmlPers.Table[0].CALLE;
				info.noExt = _xmlPers.Table[0].NOEXT;
				info.noInt = _xmlPers.Table[0].NOINT;
				info.entreCalles = _xmlPers.Table[0].ENTRECALLES;
				info.telefono = _xmlPers.Table[0].TELEFONO;
				info.cdgPais = _xmlPers.Table[0].CDGPAI;
				info.pais = _xmlPers.Table[0].PAIS;
				info.codPostal = _xmlPers.Table[0].CDGPOSTAL;
				info.cdgEntFed = _xmlPers.Table[0].CDGEF;
				info.entFed = _xmlPers.Table[0].ENTFED;
				info.cdgMun = _xmlPers.Table[0].CDGMU;
				info.municipio = _xmlPers.Table[0].MUNIC;
 				info.cdgLoc = _xmlPers.Table[0].CDGLO; 
				info.localidad = _xmlPers.Table[0].LOC;
				info.cdgCol = _xmlPers.Table[0].CDGCOL;
				info.colonia = _xmlPers.Table[0].COL;
				
				//Direccion del Negocio
				info.calleNeg = _xmlPers.Table[0].CALLENEG;
				info.noIntNeg = _xmlPers.Table[0].NOINTNEG;
				info.noExtNeg = _xmlPers.Table[0].NOEXTNEG;
				info.entreCallesNeg = _xmlPers.Table[0].ENTRECALLESNEG;
				info.codPostalNeg = _xmlPers.Table[0].CDGPOSTALNEG;
				info.cdgPaisNeg = _xmlPers.Table[0].CDGPAINEG;
				info.paisNeg = _xmlPers.Table[0].PAISNEG;
				info.cdgEntFedNeg = _xmlPers.Table[0].CDGEFNEG;
				info.entFedNeg = _xmlPers.Table[0].ENTFEDNEG;
				info.cdgMunNeg = _xmlPers.Table[0].CDGMUNEG;
				info.municipioNeg = _xmlPers.Table[0].MUNICNEG;
 				info.cdgLocNeg = _xmlPers.Table[0].CDGLONEG; 
				info.localidadNeg = _xmlPers.Table[0].LOCNEG;
				info.cdgColNeg = _xmlPers.Table[0].CDGCOLNEG;
				info.coloniaNeg = _xmlPers.Table[0].COLNEG;
				
				info.giro = _xmlPers.Table[0].GIRO;
				info.origen = _xmlPers.Table[0].CDGORIREC;
				info.destino = _xmlPers.Table[0].CDGDESREC;
				info.otroDesRec = _xmlPers.Table[0].OTRODESREC;
				info.pep = _xmlPers.Table[0].PEP;
				
				info.puesto = _xmlPers.Table[0].PUESTO;
				info.puestoDesc = _xmlPers.Table[0].PUESTODESC;
				info.periodo = _xmlPers.Table[0].PERIODO;
				info.puestoFam = _xmlPers.Table[0].PUESTOFAM;
				info.nomFam = _xmlPers.Table[0].NOMFAM;
				info.parentescoFam = _xmlPers.Table[0].PARENTESCOFAM;
				info.puestoDescFam = _xmlPers.Table[0].PUESTODESCFAM;
				info.periodoFam = _xmlPers.Table[0].PERIODOFAM;
				
				for(var i:int = 0; i < tipoObj.length; i++){
					if(info.tipoPers == tipoObj[i].id.toString()){
						cboTipoPers.selectedIndex = i;
						break;
					}
				}
				
				modificaEstatus();
		
				formDatosPers.init(info, currentState);
				formDirPers.init(info);
				formDirNegPers.init(info);
				formDirNegPers.chkMismoDom.addEventListener(MouseEvent.CLICK, copiarDomicilio);
				formKYCPers.init(info, currentState);
				formPLDPers.init(info);
			}
			
			private function modificaEstatus():void{
				tabNav.selectedIndex = 0;
				formDatosPers.asignaEstatus(cboTipoPers.selectedItem.id);
				formKYCPers.asignaEstatus(cboTipoPers.selectedItem.id);
				if(cboTipoPers.selectedItem.id == "F"){
					currentState = null;
					formDatosPers.width = 430;
					formDatosPers.height = 480;
				}
				else if(cboTipoPers.selectedItem.id == "M")
					currentState = "moral";
			}
			
			private function mostrarDocumentos():void{
				
			}
			
			private function permisos():void{
				var perfil_id:String = global.obtenerCadPerfil();	
			}
			
			public function registraInfoPersona():void{
				tipoAccion = 1;
				bandMod = true;
				info = null;
				formDatosPers.init(info, currentState);
				formDirPers.init(info);
				formDirNegPers.init(info);
				formDirNegPers.chkMismoDom.addEventListener(MouseEvent.CLICK, copiarDomicilio);
				formKYCPers.init(info, currentState);
				formPLDPers.init(info);
				this.title = "Nuevo";
				cboTipoPers.enabled = true;
			} 
			
			private function setAccionPersona(event:ResultEvent):void{
				wsMS.disconnect();
				du.rCursor();
				global.desbloquear();
				wsMS.removeEventListener(ResultEvent.RESULT, setAccionPersona);
				var res:String = event.result.toString();
				var codigo:String;
				if (res.substr(0,1) == "1"){
					if(tipoAccion == 1){
						var rSplit:Array = res.toString().split('|');
						codigo = rSplit[1].toString();
						du.mostrarMensaje("Registro exitoso de persona con el código - " + codigo,titulo,4,null,null,global.iInfo);
					}	
					else
						du.mostrarMensaje("Proceso finalizado exitosamente.",titulo,4,null,null,global.iInfo);
					cerrar();
				}	
				else
					du.mostrarMensaje(res.substr(2,res.length -1),titulo,4,null,null,global.iAlert);		
			}
			
			private function validaDatosPersona(event:EventPersona):void{
				info = event.customProp;
			}
			
			private function validarInfo():Boolean{
				if(cboTipoPers.selectedIndex == 0){
					du.mostrarMensaje("Debe seleccionar el Tipo de Persona.",titulo,4,null,null,global.iAlert);
					return false;
				}
				return true;
			}
			
			private function validaFinal():void{
				if (info.guardaDatos == true && info.guardaDir == true && info.guardaKYC){
					guardaPersona();
				}
				else
					du.mostrarMensaje("Debe capturar los datos requeridos",titulo,4,null,null,global.iAlert);
			}

		]]>
	</mx:Script>
	<mx:TabNavigator id="tabNav" width="591" height="530" x="7.5" y="50" creationPolicy="all">
		<mx:Canvas label="Datos Generales" width="100%" height="100%">
			<Forms:FormDatosPerPers id="formDatosPers" x="79.5" height="480" width="430"/>
		</mx:Canvas>
		<mx:Canvas label="Domicilio" width="100%" height="100%">	
			<Forms:FormDirPers id="formDirPers" x="84.5" height="390" width="420"/>
		</mx:Canvas>
		<mx:Canvas label="Domicilio Fiscal" width="100%" height="100%">	
			<Forms:FormDirNegPers id="formDirNegPers" x="84.5" height="390" width="420"/>
		</mx:Canvas>
		<mx:Canvas label="Inf. Adicional KYC" width="100%" height="100%">	
			<Forms:FormKYCPers id="formKYCPers" x="47" height="305" width="495"/>
		</mx:Canvas>
		<mx:Canvas label="PLD" width="100%" height="100%">	
			<Forms:FormPLDPers id="formPLDPers" x="49.5" height="370" width="490"/>
		</mx:Canvas>
	</mx:TabNavigator>
	<mx:Button id="btnCancelar" x="556" y="588" icon="@Embed(source='assets/Icon-Delete.png')" click="cerrar()" width="40"/>
	<mx:Button id="btnAceptar" x="508" y="588" icon="@Embed(source='assets/button_ok.png')" click="enviar()" width="40"/>
	<mx:Label x="183.5" y="16" text="Tipo Persona:" id="lblTipoPers"/>
	<mx:ComboBox id="cboTipoPers" labelField="nombre" x="262.5" y="13" change="modificaEstatus()"/>
	<mx:Button id="btnConsBuro" x="10" y="588" click="consultarBuro()" label="Consulta Rep. Crédito" visible="false"/>
	<mx:Button id="btnDoc" x="166" y="588" click="mostrarDocumentos()" label="Ver Documentación" visible="false"/>
</mx:TitleWindow>