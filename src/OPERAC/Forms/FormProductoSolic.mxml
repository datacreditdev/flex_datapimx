<?xml version="1.0" encoding="utf-8"?>
<mx:Canvas xmlns:mx="http://www.adobe.com/2006/mxml" width="550" height="130" creationPolicy="all">
	<mx:states>
		<mx:State name="revolvente">
			<mx:SetProperty name="height" value="200"/>
			<mx:AddChild position="lastChild">
				<mx:Canvas x="122.5" y="128" width="295" height="59" styleName="canvasMod">
					<mx:FormItem label="Fecha de Autorizado:" id="prodCred0" visible="true" x="19" y="18" width="255">
						<mx:ComboBox id="cboProdCred0" labelField="nombre" width="131"/>
					</mx:FormItem>
				</mx:Canvas>
			</mx:AddChild>
			<mx:SetProperty target="{tipoProd}" name="x" value="98"/>
			<mx:SetProperty target="{prodCred}" name="x" value="84"/>
		</mx:State>
	</mx:states>
	<mx:Metadata>
		[Event(name="enviarDatosSolic", type="Data.EventSolic")]
	</mx:Metadata>
	
	<mx:NumberValidator id="tipoProdV" source="{cboTipoProd}" property="selectedIndex"
	 minValue="1" triggerEvent="" lowerThanMinError="Tipo de Producto Requerido"/>
	
	<mx:NumberValidator id="prodCredV" source="{cboProdCred}" property="selectedIndex"
	 minValue="1" triggerEvent="" lowerThanMinError="Producto de Crédito Requerido"/>
	 
	<mx:Script>
		<![CDATA[
			import Data.Utils;
			import Data.Globales;
			import mx.validators.Validator;
			import mx.managers.PopUpManager;
			import mx.collections.ArrayCollection;
			import Data.EventSolic;
			import Data.DatosSolic;
			import mx.core.Application;
			import mx.containers.TitleWindow;			
			import mx.controls.Alert;
			import mx.controls.DateField;
			import mx.effects.easing.Elastic;
			import mx.rpc.soap.WebService;
			import mx.rpc.events.ResultEvent;
			import mx.rpc.events.FaultEvent;
			
			private var _xmlTipoProd:XML =  new XML();
			private var _xmlProdCred:XML =  new XML();

			public var tipoProdObj:ArrayCollection = new ArrayCollection();
			public var prodCredObj:ArrayCollection = new ArrayCollection();
			
			public var datos:DatosSolic = new DatosSolic();
			
			public var tipoAccion:int;
			public var coord:String;
			private var du:Utils;
			private var global:Globales;
			
			public function cargaProdCred():void{
				var wsCat:WebService = new WebService;
				var params:Array = new Array;				

				du.initWsCat(wsCat);
				du.sCursor();
					
				du.ejecutaWsMethod(wsCat,function(evt:ResultEvent):void {											
					_xmlProdCred = new XML(evt.result.toString());
					
					du.rCursor();
					du.closeWs(wsCat);
					
					cboProdCred.dataProvider = null;
					
					if (_xmlProdCred.elements().length() > 0){
						formateaProdCred();
						cboProdCred.dataProvider = prodCredObj;
						cboProdCred.selectedIndex = 0;
						if (tipoAccion == 1){
							prodCredObj.filterFunction = filtraProdCred;
							prodCredObj.refresh();
						}
						if (tipoAccion == 2){
							for(var j:int = 0; j < prodCredObj.length; j++){
								if (prodCredObj[j].id.toString() == datos.cdgProdCred){
									cboProdCred.selectedIndex = j;
									break;
								}
							}
						}
					}				
				});
				params[0] = cboTipoProd.selectedItem.id;
				params[1] = coord;		
				wsCat.getInfoRegistro.send(39, params);
			}
			
			public function enviarDatosSolic(formData:DatosSolic):void{
				var invalidArray:Array = Validator.validateAll([tipoProdV, prodCredV]);
				
				if(invalidArray.length == 0){		
					formData.cdgTipoProd = cboTipoProd.selectedItem.id;
					formData.cdgProdCred = cboProdCred.selectedItem.id;
					formData.guardaProd = true;
				}
				else
					formData.guardaProd = false;
				
				var event:EventSolic = new EventSolic("enviarDatosSolic", formData);
				dispatchEvent(event);
			}
			
			public function filtraProdCred(item:Object):Boolean{
				var isMatch:Boolean = false
				var fec:Date = DateField.stringToDate(item.fecVal.toString(),"DD/MM/YYYY")
				if(fec >= global.obtenerFechaSistema())
					isMatch = true 
				return isMatch; 
			}
			
			public function formateaTipoProd():void{
				var cont:int = _xmlTipoProd.elements().length();
				var oItem:Object
				
				oItem = new Object();
				oItem.id = "0";	
				oItem.nombre = "--Seleccionar--";
				tipoProdObj.addItem(oItem);
				
				for (var i:int = 0; i < cont; i++){
					oItem = new Object();
					oItem.id = _xmlTipoProd.Table[i].CODIGO;	
					oItem.nombre = _xmlTipoProd.Table[i].NOMBRE;
					tipoProdObj.addItem(oItem);
				}
			}
			
			public function formateaProdCred():void{
				var cont:int = _xmlProdCred.elements().length();
				var oItem:Object
				
				prodCredObj.removeAll();
				prodCredObj.refresh();
				
				oItem = new Object();
				oItem.id = "0";	
				oItem.nombre = "--Seleccionar--";
				oItem.fecVal = DateField.dateToString(global.obtenerFechaSistema(),"DD/MM/YYYY");
				prodCredObj.addItem(oItem);
				
				for (var i:int = 0; i < cont; i++){		
					oItem = new Object();
					oItem.id = _xmlProdCred.Table[i].CODIGO;	
					oItem.nombre = _xmlProdCred.Table[i].NOMBRE;
					oItem.fecVal = _xmlProdCred.Table[i].FVALIDO;
					prodCredObj.addItem(oItem);
				}
			}
			
			public function init(info:DatosSolic, tipoAccion:int, coord:String = ""):void{
				var wsCat:WebService = new WebService;
				var params:Array = new Array;
				
				global = new Globales();
				du = new Utils();
				this.tipoAccion = tipoAccion;
				this.coord = coord;
				
				if(tipoAccion == 2)
					cnvProdSolic.enabled = false;
				
				du.initWsCat(wsCat);
				du.sCursor();
					
				du.ejecutaWsMethod(wsCat,function(evt:ResultEvent):void {											
					_xmlTipoProd = new XML(evt.result.toString());
					
					du.rCursor();
					du.closeWs(wsCat);
					
					if (_xmlTipoProd.elements().length() > 0){
						formateaTipoProd();
						cboTipoProd.dataProvider = tipoProdObj;
					}				
					if (info != null){
						datos.cdgTipoProd = info.cdgTipoProd;
						datos.cdgProdCred = info.cdgProdCred;
							
						for(var j:int = 0; j < tipoProdObj.length; j++){
							if (tipoProdObj[j].id.toString() == info.cdgTipoProd){
								cboTipoProd.selectedIndex = j;
								cargaProdCred();
								break;
							}
						}
					}	
				});
				wsCat.getCatalogoGral.send(11);
			}
			
			public function obtenerProdCred():String{
				return cboProdCred.selectedItem.id;
			}
			
			public function obtenerTipoProd():String{
				return cboTipoProd.selectedItem.id;
			}
			
	]]>
	</mx:Script>
	<mx:Canvas id="cnvProdSolic" x="10" y="10" width="530" height="110" styleName="canvasMod">
		<mx:FormItem label="Tipo de Producto:" id="tipoProd" visible="true" x="59.5" y="19">
			<mx:ComboBox id="cboTipoProd" labelField="nombre" width="300" change="cargaProdCred()"/>
		</mx:FormItem>
		<mx:FormItem label="Producto de Crédito:" id="prodCred" visible="true" x="45.5" y="63">
			<mx:ComboBox id="cboProdCred" labelField="nombre" width="340"/>
		</mx:FormItem>
	</mx:Canvas>
</mx:Canvas>