<?xml version="1.0" encoding="utf-8"?>
<mx:Canvas xmlns:mx="http://www.adobe.com/2006/mxml" creationComplete="initApp()" width="100%" xmlns:forms="forms.*" xmlns:Data="Data.*" horizontalScrollPolicy="off" creationPolicy="all" xmlns:Administracion="Administracion.*" height="100%">
	<!--Componente de devolucion de garantias-->
	<mx:Script>
		<![CDATA[
			import Data.Globales;
			import Data.Utils;
			import mx.collections.ArrayCollection;
			import mx.containers.TitleWindow;
			import mx.controls.Alert;
			import mx.controls.DataGrid;
			import mx.controls.dataGridClasses.DataGridItemRenderer;  
			import mx.controls.CheckBox;
			import mx.controls.ComboBox;
			import mx.core.Application;
			import mx.effects.easing.Elastic;
			import mx.events.CloseEvent;
			import mx.events.DataGridEvent;
			import mx.events.FlexEvent;
			import mx.events.ListEvent;
			import mx.events.ValidationResultEvent;
			import mx.managers.PopUpManager;
			import mx.rpc.Fault;
			import mx.rpc.events.ResultEvent;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.soap.WebService;
			import mx.rpc.xml.SimpleXMLDecoder;
			import mx.utils.ArrayUtil;  
			           
			[Bindable]
			public var _xmlAcred:XML = new XML();            
			[Bindable]
			public var _xmlGrupos:XML = new XML();
			[Bindable]
			public var _xmlChq:XML = new XML();
			[Bindable]
			public var _xmlCoord:XML = new XML();
			[Bindable]
			public var _xmlCta:XML = new XML();
			
			public var wsMS:WebService;	
			public var du:Utils;
			public var titulo:String;
			public var rep:String;
			private var global:Globales;
		
			public var acred:Array;
			public var chqAcred:Array;
			
			public var acredObj:ArrayCollection = new ArrayCollection();
			public var chqObj:ArrayCollection = new ArrayCollection();
			public var coordObj:ArrayCollection = new ArrayCollection();
			
			public function activarContAcred(band:Boolean):void{
				btnDatosAcred.enabled = band;	
			}	
					
			public function actualizarAcred(event:Event):void{
				buscarListaAcred();
			}
			
			public function actualizarCta(event:Event):void{
				var comMttoCta:MttoBusqCuenta = event.currentTarget as MttoBusqCuenta;
				txtCodCuenta.text = comMttoCta.dgCuenta.selectedItem.CODIGO;
				txtCuenta.text = comMttoCta.dgCuenta.selectedItem.BANCO;
				buscaSigCheque();			
			}
			
			public function actualizaRangoCheque():void{
				if (_xmlChq.elements().length() > 0){
					var chqIni:Number = Number(_xmlChq.Table[0].CHQSIG);
					var chqFin:Number = chqIni + (calculaRegSel() - 1);
					txtChqIni.text = chqIni.toString();
					txtChqFin.text = chqFin.toString();
				}
				else{
					txtChqIni.text = "";
					txtChqFin.text = "";
				}
			}
		
			public function buscaSigCheque():void{
				var wsCat:WebService = new WebService;
				var params:Array = new Array;
				
				if(txtCodCuenta.text != "" && txtCuenta.text != ""){
					var codCuenta:String = txtCodCuenta.text;
					var coord:String = dgGrupos.selectedItem.CDGCO;
					
					du.initWsCat(wsCat);
					du.sCursor();
								
					du.ejecutaWsMethod(wsCat,function(evt:ResultEvent):void {																				
						_xmlChq = new XML(evt.result);
							
						du.rCursor();
						du.closeWs(wsCat);
						
						actualizaRangoCheque();
					});
					params[0] = codCuenta;
					params[1] = coord;
					wsCat.getInfoRegistro.send(5, params);
				}
			}
		
			public function buscarCuenta():void{
				var wsCat:WebService = new WebService;
				var params:Array = new Array;
				
				if (txtCodCuenta.text != ""){
					txtCuenta.setFocus();
					if(dgAcred.dataProvider != null){
						var listaAcred:ArrayCollection = dgAcred.dataProvider as ArrayCollection; 
						if(listaAcred.length > 0){
							du.initWsCat(wsCat);
							du.sCursor();
							global.bloquear();
							
							du.ejecutaWsMethod(wsCat, function(event:ResultEvent):void{
								this._xmlCta = new XML(event.result);
								
								du.closeWs(wsCat);
								du.rCursor();
								global.desbloquear();
								
								if (this._xmlCta.elements().length() > 0){
									txtCuenta.text = _xmlCta.Table[0].BANCO;
									buscaSigCheque();	
								}
								else{
									txtCuenta.text = "";
									txtChqIni.text = "";
									txtChqFin.text = "";
									du.mostrarMensaje("No se ha encontrado información de la cuenta.\n\nVerifique los datos capturados.",titulo,4,null,null,global.iAlert);
								}
							});
							params[0] = 5;
							params[1] = txtCodCuenta.text;
							params[2] = "";
							params[3] = global.obtenerUsuario();
							params[4] = "";
							wsCat.getInfoRegistro.send(3, params);
						}
						else
							du.mostrarMensaje("No es posible cargar la información de la cuenta. Es necesario desplegar la lista de acreditados del grupo.",titulo,4,null,null,global.iAlert);
					}					
				}	
			}
			
			public function buscarGrupo():void{
				var wsCat:WebService = new WebService;
				var params:Array = new Array; 
				
				if (txtCodGrupo.text != "" || txtGrupo.text != ""){
					btnBuscar.setFocus();
					dgGrupos.dataProvider = null;
					du.initWsCat(wsCat);
					du.sCursor();
					global.bloquear();
				
					du.ejecutaWsMethod(wsCat, function(event:ResultEvent):void{
						this._xmlGrupos = new XML(event.result);
						
						du.closeWs(wsCat);
						du.rCursor();
						global.desbloquear();
						
						if (this._xmlGrupos.elements().length() > 0){
							dgGrupos.dataProvider = _xmlGrupos.Table;
						}
						seleccionaGrupo();
					});
					params[0] = global.obtenerUsuario();
					params[1] = txtCodGrupo.text;
					params[2] = txtGrupo.text;
					params[3] = dtfFecha.text;
					wsCat.getListado.send(17, params);
				}	
			}
			
			public function buscarListaAcred():void{
				var wsCat:WebService = new WebService;
				var params:Array = new Array;
				
				var grupo:String = dgGrupos.selectedItem.CDGNS;
				var ciclo:String = dgGrupos.selectedItem.CICLO;
				dgAcred.dataProvider = null;
				du.initWsCat(wsCat);
			 	du.sCursor();
			 	
			 	du.ejecutaWsMethod(wsCat, function(event:ResultEvent):void{
			 		_xmlAcred = new XML(event.result);
			 		
			 		du.closeWs(wsCat);
					du.rCursor();
					global.desbloquear();
					
					if(_xmlAcred.elements().length() > 0){
						formateaListaAcred();
						dgAcred.dataProvider = acredObj;
						lblControl.text = calculaRegSel().toString() + " Registro(s) seleccionado(s)";
					}
			 	});
			 	params[0] = grupo;
			 	params[1] = ciclo;
			 	wsCat.getListado.send(18, params);
			}
			
			public function calculaRegSel():Number{
				var listaAcred:ArrayCollection = dgAcred.dataProvider as ArrayCollection;
				var cont:Number = 0;
				
				for (var i:int = 0; i < listaAcred.length; i++){
					if(listaAcred[i].REGISTRO == true)
						cont++;
				}
				return cont;
			}
			
			public function desabilitaEdicion(event:DataGridEvent):void{
				event.preventDefault();
			} 
			
			public function enviar():void{
				if(valida()){
					var grupo:String = dgGrupos.selectedItem.CDGNS;
					var ciclo:String = dgGrupos.selectedItem.CICLO;
					var coord:String = dgGrupos.selectedItem.CDGCO;
					var cuenta:String = txtCodCuenta.text;
					var fecha:String = global.formatearFecha(global.obtenerFechaSistema());
					var chqIni:String = txtChqIni.text;
					var chqFin:String = txtChqFin.text;
					formateaRegAcred();
					
					initConexion();
					du.sCursor();
							
					du.ejecutaWsMethod(wsMS,function(evt:ResultEvent):void {																				
						var resp:String = evt.result.toString();
						
						if(resp.substr(0,1) == "1"){			
							
							du.ejecutaWsMethod(wsMS,function(evt:ResultEvent):void {																				
								var res:String = evt.result.toString();
								
								du.rCursor();
								du.closeWs(wsMS);	
								
								var id:String = "&id=" + rep;
								var consGrupo:String = "&grupo=" + grupo;
								var consCiclo:String = "&ciclo=" + ciclo;
								var consCuenta:String = "&cuenta=" + cuenta;
								var consCoord:String = "&coord=" + coord;
								var consChqIni:String = "&chqIni=" + chqIni;
								var consChqFin:String = "&chqFin=" + chqFin;
								var consulta:String = global.urlPdf + id + consGrupo + consCiclo + consCuenta + consCoord + consChqIni + consChqFin;
								
								if (res.substr(0,1) == "1")
									Application.application.muestraPdf(consulta);
								else if(res.substr(0,1) == "2"){
									du.mostrarMensaje(res.substr(2,res.length -1), titulo, 4, null, 
										function(e:Event):void{
											Application.application.muestraPdf(consulta);
										}, global.iAlert);
								}
								else
									du.mostrarMensaje(res.substr(2,res.length -1),titulo,4,null,null,global.iAlert);		
							});
							wsMS.setAccionImpCheque.send(grupo, ciclo, acred, chqAcred, fecha, global.obtenerUsuario(), cuenta);
						}	
						else{
							du.rCursor();
							du.closeWs(wsMS);	
							
							du.mostrarMensaje(resp.substr(2,resp.length -1),titulo,4,null,null,global.iAlert);
						}	
					});
					wsMS.getValidaRangoCheques.send(coord, cuenta, chqFin);
				}
			}
			
			public function formateaChequera():void{
				var cont:int = _xmlChq.elements().length();
				var oItem:Object;
				var item:Array = new Array;
				
				oItem = new Object();
				oItem.id = "--Seleccionar--";
				item.push(oItem);
				
				for (var i:int = 0; i < cont; i++){
					oItem = new Object();
					oItem.id = _xmlChq.Table[i].CODIGO;	
					item.push(oItem);					
				}
				chqObj = new ArrayCollection(item);
			}
			
			public function formateaListaAcred():void{
				var cont:int = _xmlAcred.elements().length();
				var oItem:Object;
				var item:Array = new Array;
				
				acredObj.removeAll();
				acredObj.refresh();
				
				for (var i:int = 0; i < cont; i++){
					oItem = new Object();
					oItem.REGISTRO = true;
					oItem.CDGCL = _xmlAcred.Table[i].CDGCL;
					oItem.NOMBREC = _xmlAcred.Table[i].NOMBREC;
					oItem.CICLO = _xmlAcred.Table[i].CICLO;
					oItem.CANTAUTOR = _xmlAcred.Table[i].CANTAUTOR;
					item.push(oItem);
				}
				acredObj = new ArrayCollection(item);
			}
			
			public function formateaRegAcred():void{
				var n:int;
				var cont:int;
				var ini:Number;
				var listaAcred:ArrayCollection = dgAcred.dataProvider as ArrayCollection;  
				
				n = 0;
				cont = listaAcred.length;
				ini = Number(txtChqIni.text);
				acred = new Array;
				chqAcred = new Array;
				
				for(var i:int = 0; i < cont; i++){
					if(listaAcred[i].REGISTRO == true){
						acred[n] = listaAcred[i].CDGCL;
						chqAcred[n] = ini.toString(); 
						n++;
						ini++;
					}
				}
			}
			
			public function initApp():void{
				global = new Globales();
				du = new Utils();
				rep = "21";
				titulo = "Devolución de Garantías";
				lblTitulo.text = titulo.toUpperCase();
				var fec:Date = global.obtenerFechaSistema();
				dtfFecha.selectedDate = global.seleccionarDiaHabil(new Date(fec.fullYear,fec.month,fec.date));
				
				/*_xmlCoord = Application.application._xmlCoord;
				
				if (_xmlCoord.elements().length() > 0){
					formateaCoord();
					cboCoordinacion.dataProvider = coordObj;
				}*/ 	
			}
			
			public function initConexion():void{				
				wsMS = new WebService();			
				wsMS.wsdl = Application.application.wsStr.wsdlServ.toString();
				wsMS.loadWSDL();
			}			
			
			public function muestraFormCta():void{
				var comMttoCta:MttoBusqCuenta = new MttoBusqCuenta();
				comMttoCta = MttoBusqCuenta(PopUpManager.createPopUp(this,MttoBusqCuenta,true));
				comMttoCta.init(5);
				comMttoCta.addEventListener("enviar", actualizarCta);
				PopUpManager.centerPopUp(comMttoCta);
			}
		
			public function seleccionaRegAcred(event:Event):void{
				var ind:int = dgAcred.selectedIndex;
				var vScroll:Number = dgAcred.verticalScrollPosition;
				acredObj[ind].REGISTRO = CheckBox(event.currentTarget).selected;
				if(calculaRegSel() == 0){
					acredObj[ind].REGISTRO = !CheckBox(event.currentTarget).selected;
					acredObj.refresh();
					dgAcred.validateNow();
					dgAcred.verticalScrollPosition = vScroll;
					dgAcred.selectedIndex = ind;
					du.mostrarMensaje("Debe seleccionar al menos un registro para realizar proceso de impresión.",titulo,4,null,null,global.iAlert);	
				}
				actualizaRangoCheque();
				lblControl.text = calculaRegSel().toString() + " Registro(s) seleccionado(s)";
			}	
			
			public function seleccionaGrupo():void{
				acredObj.removeAll();
				acredObj.refresh();
				dgAcred.dataProvider = null;
				lblControl.text = "";
				txtCodCuenta.text = "";
				txtCuenta.text = "";
				txtChqIni.text = "";
				txtChqFin.text = "";
				if (dgGrupos.selectedIndex >= 0)
					activarContAcred(true);
				else
					activarContAcred(false);
			}
			
			public function valida():Boolean{
				if(dgGrupos.selectedIndex < 0){
					du.mostrarMensaje("No se ha seleccionado ningún grupo para imprimir los cheques.",titulo,4,null,null,global.iAlert);
					return false;
				}	
				if(acredObj.length == 0){
					du.mostrarMensaje("No han sido desplegados los acreditados del grupo.",titulo,4,null,null,global.iAlert);
					return false;
				}
				if(txtCodCuenta.text == "" || txtCuenta.text == ""){
					du.mostrarMensaje("Debe seleccionar la cuenta bancaria.",titulo,4,null,null,global.iAlert);
					return false;
				}
				if(txtChqIni.text == "" || txtChqFin.text == ""){
					du.mostrarMensaje("No ha sido desplegado el rango de cheques.\n\nVerifique la información de la cuenta",titulo,4,null,null,global.iAlert);
					return false;
				}
				return true;
			}
		]]>
	</mx:Script>
	<mx:Canvas backgroundAlpha="1.0" backgroundColor="#FFFFFF" width="590" height="320">
		<mx:Label id="lblTitulo" x="10" y="10" width="380.5" fontSize="12" fontWeight="bold" fontStyle="italic"/>
		<mx:Canvas x="10" y="39" width="564.5" height="225" styleName="canvasMod" visible="true">
			<mx:TextInput id="txtCuenta" x="200.75" y="107" width="231.5" editable="false"/>
			<mx:TextInput id="txtCodCuenta" x="147.75" y="107" width="45" maxChars="2" restrict="0-9" enter="buscarCuenta()"/>
			<mx:Label id="lblEtiqCuenta" x="81.75" y="109" text="Cuenta:" width="60" textAlign="right"/>
			<mx:Button id="btnBusqCta" x="440.75" y="105" icon="@Embed(source='assets/ico_lupa.png')" click="muestraFormCta()" toolTip="Buscar Cuenta" width="40"/>
			<mx:Label id="lblChqIni" x="81.8" y="141" text="Cheque:" width="57.95" textAlign="right"/>
			<mx:TextInput id="txtChqIni" x="147.75" y="139" width="70.05" editable="false"/>
			<mx:Label id="lblGrupo" x="97.45" y="12" text="Grupo:" width="44.300003" height="20" textAlign="right"/>
			<mx:TextInput id="txtGrupo" x="147.75" y="10" maxChars="6" restrict="0-9" enter="ejecuta()"/>
			<mx:TextInput id="txtCiclo" x="227.75" y="10" width="300" maxChars="2" restrict="0-9" enter="ejecuta()"/>
			<mx:Label id="lblEtiqCuenta0" x="147.75" y="42" text="Cuenta:" width="380" textAlign="left" height="25" fontSize="16" fontStyle="normal" fontWeight="bold"/>
			<mx:Label id="lblGrupo0" x="95.45" y="77" text="Fecha:" width="44.300003" height="20" textAlign="right"/>
			<mx:DateField x="147.75" y="75" width="100"/>
		</mx:Canvas>
		<mx:Canvas x="514.5" y="272" width="60" height="37" cornerRadius="10" borderStyle="solid" borderColor="#7B8B93" visible="true">
			<mx:Button id="btnImprimir" x="7.75" y="3" icon="@Embed(source='assets/button_ok.png')" click="enviar()" enabled="true" toolTip="Imprimir" width="40"/>
		</mx:Canvas>
	</mx:Canvas>
</mx:Canvas>