<?xml version="1.0" encoding="utf-8"?>
<mx:TitleWindow xmlns:mx="http://www.adobe.com/2006/mxml" layout="absolute" width="600" height="380" 
	xmlns:Data="Data.*" xmlns:Forms="OPERAC.Forms.*">
	
	<mx:Validator id="desdeV" source="{dtfDesde}" property="text" 
	invalid="{dtfDesde.setFocus()}" triggerEvent="" requiredFieldError="Fecha Inicio Requerida"/>
	
	<mx:Validator id="hastaV" source="{dtfHasta}" property="text" 
	invalid="{dtfHasta.setFocus()}" triggerEvent="" requiredFieldError="Fecha Fin Requerida"/>
	
	<mx:Validator id="fecLimV" source="{dtfFecLim}" property="text" 
	invalid="{dtfFecLim.setFocus()}" triggerEvent="" requiredFieldError="Fecha Límite Requerida"/>
	
	<mx:Validator id="montoV" source="{txtMonto}" property="text" 
	invalid="{txtMonto.setFocus()}" triggerEvent="" requiredFieldError="Monto Requerido"/>

	<mx:Script>
		<![CDATA[
		import Data.Globales;
		import Data.Utils;
		import mx.collections.ArrayCollection;
		import mx.controls.Alert;
		import mx.core.Application;
		import mx.effects.*;
		import mx.events.EffectEvent;
		import mx.managers.PopUpManager;	
		import mx.rpc.events.ResultEvent;
		import mx.rpc.soap.WebService;
		
		private var _xmlCR:XML = new XML();
		
		private var global:Globales;
		private var du:Utils;
		private var openEffect:Effect = new WipeDown();
		private var closeEffect:Effect = new WipeDown();
		private var wsMS:WebService;	
		public var tipoAccion:int;
		public var titulo:String;
		
		public function cargaInfoCredRev(tipo:int, acred:String, nomAcred:String, autorizo:String, nomAutorizo:String, autorizado:String):void{
			var wsCat:WebService = new WebService;
			var params:Array = new Array;
			tipoAccion = tipo; 
			this.title = "Edición";
			
			du.initWsCat(wsCat);
			du.sCursor();
			
			du.ejecutaWsMethod(wsCat,function(evt:ResultEvent):void {											
				_xmlCR = new XML(evt.result.toString()); 
					
				du.rCursor();
				du.closeWs(wsCat);
					
				if (_xmlCR.elements().length() > 0){
					llenaRegistros();
				} 	
			});
			params[0] = acred;
			params[1] = autorizado;
			//Obtiene informacion de la Linea de Credito Revolvente
			wsCat.getInfoAcred.send(16, params);
		}
		
		public function cerrar():void{
			var playReverse:Boolean = true;   
            closeEffect.duration = 500;
            closeEffect.play([this], playReverse);
            closeEffect.addEventListener(EffectEvent.EFFECT_END, terminarEfecto);
		}
	
		public function enviar():void{
			if(valida())
				guardaCredRevolvente();	
			else
				du.mostrarMensaje("Debe capturar los datos requeridos",titulo,4,null,null,global.iAlert);
		}
				
		public function guardaCredRevolvente():void{
			initConexion();
			du.sCursor();
			global.bloquear();
			wsMS.addEventListener(ResultEvent.RESULT, setAccionCredRevolvente);
			wsMS.setAccionCredRevolvente.send(tipoAccion, txtCodAcred.text, dtfAutorizado.text, dtfDesde.text,
											  dtfHasta.text, Number(global.formatearNumerico(txtMonto.text)), 
											  dtfFecLim.text, global.obtenerUsuario());	
		}
	
		public function init(tipo:int, acred:String, nomAcred:String, autorizo:String, nomAutorizo:String, autorizado:String = null):void{
			global = new Globales(); 
			du = new Utils();
			titulo = "Mantenimiento de Crédito Revolvente";
			
			txtCodAcred.text = acred;
			txtAcred.text = nomAcred;
			//Codigo que permite ejecutar el efecto de apertura
			openEffect.duration = 1000;
			openEffect.play([this]);
						
			if(tipo == 1)
				registraInfoCredRev(tipo, acred, nomAcred, autorizo, nomAutorizo);
			else if(tipo == 2)
				cargaInfoCredRev(tipo, acred, nomAcred, autorizo, nomAutorizo, autorizado);
		}
		
		public function initConexion():void{				
			wsMS = new WebService();			
			wsMS.wsdl = Application.application.wsStr.wsdlServ.toString();
			wsMS.loadWSDL();
		}	
		
		public function llenaRegistros():void{
			dtfAutorizado.enabled = false;
			dtfAutorizado.selectedDate = global.convCadenaFecha(_xmlCR.Table[0].FAUTORIZADO);
			dtfDesde.setFocus();
			dtfDesde.selectedDate = global.convCadenaFecha(_xmlCR.Table[0].FINICIO);
			dtfHasta.selectedDate = global.convCadenaFecha(_xmlCR.Table[0].FFIN);
			txtMonto.text = global.formatearDecimal(_xmlCR.Table[0].MONTO);
			dtfFecLim.selectedDate = global.convCadenaFecha(_xmlCR.Table[0].FFINPRC);
		}
			
		public function registraInfoCredRev(tipo:int, acred:String, nomAcred:String, autorizo:String, nomAutorizo:String):void{
			tipoAccion = tipo;
			this.title = "Nuevo";
			
			dtfAutorizado.selectedDate = global.obtenerFechaSistema();
		}
		
		private function setAccionCredRevolvente(event:ResultEvent):void{
			wsMS.disconnect();
			du.rCursor();
			global.desbloquear();
			wsMS.removeEventListener(ResultEvent.RESULT, setAccionCredRevolvente);
			var res:String = event.result.toString();
			if (res.substr(0,1) == "1"){
				cerrar();
			}	
			else
				du.mostrarMensaje(res.substr(2,res.length -1),titulo,4,null,null,global.iAlert);		
		}
		
		public function terminarEfecto(event:EffectEvent):void{
			closeEffect.removeEventListener(EffectEvent.EFFECT_END, terminarEfecto);
			PopUpManager.removePopUp(this);
		}
		
		public function valida():Boolean{	
			var invalidArray:Array = Validator.validateAll([desdeV, hastaV, montoV]);
				
			if(invalidArray.length > 0)	
				return false;
			return true;
		}
		
		private function validaFechaAut():void{
			if(dtfDesde.text != "")
				dtfAutorizado.selectedDate = global.validarFecha(dtfAutorizado.selectedDate, dtfDesde.selectedDate, titulo);
		}
		
		private function validaFechaIni():void{
			if(dtfAutorizado.text != "" && dtfDesde.selectedDate < dtfAutorizado.selectedDate){
				du.mostrarMensaje("La fecha inicial debe ser igual o superior a la fecha de autorización",titulo,4,null,null,global.iAlert);
				dtfDesde.selectedDate = dtfAutorizado.selectedDate;
			}	
			if(dtfHasta.text != "")
				dtfDesde.selectedDate = global.validarFecha(dtfDesde.selectedDate, dtfHasta.selectedDate, titulo);
		}
		
		private function validaFechaFin():void{
			if(dtfDesde.text != "" && dtfHasta.selectedDate < dtfDesde.selectedDate){
				du.mostrarMensaje("La fecha fin debe ser igual o superior a la fecha inicial",titulo,4,null,null,global.iAlert);
				dtfHasta.selectedDate = dtfDesde.selectedDate;
			}	
			if(dtfFecLim.text != "")
				dtfHasta.selectedDate = global.validarFecha(dtfHasta.selectedDate, dtfFecLim.selectedDate, titulo);
		}
		
		private function validaFechaFinCred():void{
			if(dtfFecLim.text != "" && dtfFecLim.selectedDate < dtfHasta.selectedDate){
				du.mostrarMensaje("La fecha fin del crédito debe ser igual o superior a la fecha fin de vigencia",titulo,4,null,null,global.iAlert);
				dtfFecLim.selectedDate = dtfHasta.selectedDate;
			}	
		}

		]]>
	</mx:Script>
	<mx:Canvas x="57.75" y="10" width="480.5" height="40" styleName="canvasMod">
		<mx:Label id="lblAcred" x="54.5" y="9" text="Acreditado:"/>
		<mx:TextInput id="txtCodAcred" x="123.5" y="7" width="50" editable="false"/>
		<mx:TextInput id="txtAcred" x="181.5" y="7" width="253" editable="false"/>
	</mx:Canvas>
	<mx:Button id="btnAceptar" x="249" y="304" width="40" icon="@Embed(source='assets/button_ok.png')" click="enviar()"/>
	<mx:Button id="btnCancelar" x="307" y="304" width="40" icon="@Embed(source='assets/Icon-Delete.png')" click="cerrar()"/>
	<mx:Canvas x="17.75" y="61" width="560" height="235" styleName="canvasMod">
		<mx:Canvas id="cnvVigencia" x="77" y="81" width="404" height="45" styleName="canvasMod">
			<mx:Label id="lblHasta" x="214.1" y="12" text="Hasta:" textAlign="right"/>
			<mx:Label id="lblDesde" x="36.85" y="12" text="Desde:" textAlign="right"/>
			<mx:DateField id="dtfDesde" x="83.85" y="10" width="109" change="validaFechaIni()"/>
			<mx:DateField id="dtfHasta" x="258.1" y="10" width="109" change="validaFechaFin()"/>
		</mx:Canvas>
		<mx:Canvas id="cnvCond" styleName="canvasMod" x="54" y="134" height="85" width="450">
			<mx:Label id="lblCantidad" x="89.85" y="47" text="Finalización del Crédito:"/>
			<mx:DateField id="dtfFecLim" x="215.85" y="46" width="109.6" change="validaFechaFinCred()"/>	
			<mx:Label id="lblMonto" x="170.85" y="17" text="Monto:"/>
			<mx:TextInput id="txtMonto" x="215.85" y="16" width="109.6" maxChars="18" restrict="0-9;.;," focusOut="{global.formatearMonto(event)}"/>
		</mx:Canvas>
		<mx:Label id="lblVigencia" x="77" y="62" text="Vigencia del Crédito Revolvente " textAlign="right"/>
		<mx:Canvas styleName="canvasMod" x="98.7" y="11" height="45" width="360.55">
			<mx:Label id="lblcodDisp" x="60.95" y="12" text="Fecha de Autorización:" textAlign="right"/>
			<mx:DateField id="dtfAutorizado" x="185.95" y="11" width="109.6" editable="false" change="validaFechaAut()"/>	
		</mx:Canvas>
	</mx:Canvas>
</mx:TitleWindow>