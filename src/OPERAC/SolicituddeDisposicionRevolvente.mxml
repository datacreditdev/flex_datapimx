<?xml version="1.0" encoding="utf-8"?>
<mx:Canvas xmlns:mx="http://www.adobe.com/2006/mxml" creationComplete="initApp()" width="100%" xmlns:forms="forms.*" 
	xmlns:Data="Data.*" horizontalScrollPolicy="off" creationPolicy="all" xmlns:Administracion="Administracion.*" height="100%">
	<mx:states>
		<mx:State name="evaluacion">
			<mx:RemoveChild target="{btnAgregarSolic}"/>
			<mx:RemoveChild target="{btnEliminarSolic}"/>
			<mx:SetProperty target="{canvas1}" name="width" value="110"/>
			<mx:SetProperty target="{canvas1}" name="x" value="621"/>
		</mx:State>
	</mx:states>
	
	<!--Componente de mantenimiento de solicitudes revolventes Individuales-->
	<mx:Script>
		<![CDATA[
			import Data.Globales;
			import Data.Permisos;
			import Data.Utils;
			import mx.collections.ArrayCollection;
			import mx.containers.TitleWindow;
			import mx.controls.Alert;
			import mx.controls.ComboBox;
			import mx.controls.DataGrid;
			import mx.controls.dataGridClasses.DataGridItemRenderer;  
			import mx.core.Application;
			import mx.effects.easing.Elastic;
			import mx.events.CloseEvent;
			import mx.events.DataGridEvent;
			import mx.events.ListEvent;
			import mx.managers.PopUpManager;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			import mx.rpc.Fault;
			import mx.rpc.soap.WebService;

			public var dPermisos:XML = new XML();	
			public var _xmlGrupos:XML = new XML();
			public var _xmlSolic:XML = new XML();
			public var _xmlAcred:XML = new XML();
			
			public var objMtto:Sprite = new Sprite();
			
			public var wsMS:WebService;
			public var titulo:String;	
			private var du:Utils;
			private var global:Globales;
			private var permiso:Permisos;
			
			//variables que especifican el indice del elemento 
			//seleccionado al realizar la modificacion del registro
			public var accionSolic:int;
			public var indSolic:int;
			public var vScroll:Number;
			public var res:String;
			
			//variables que indican las opciones disponibles para el usuario
			public var alta:Boolean = new Boolean();
			public var borrado:Boolean = new Boolean();
			public var consulta:Boolean = new Boolean();
			public var edicion:Boolean = new Boolean();
			
			public var comMttoFecha:MttoSelFecha;
			public var comMttoAgrega:MttoAgregaAcred;
			public var comMttoBusq:MttoBusqAcred;
			public var comMttoProyecto:MttoProyecto;
			
			public function activarContGarantia(band:Boolean):void{
				btnDatosAcred.enabled = band;	
			}	
					
			public function activarContSolic(band:Boolean):void{
				if(alta == true)
					btnAgregarSolic.enabled = band;
				btnDatosSolic.enabled = band;
			}
			
			public function activarContModSolic(band:Boolean):void{
				if(borrado == true)
					btnEliminarSolic.enabled = band;
				if(edicion == true)	
					btnEditarSolic.enabled = band;
			}
			
			public function actualizarSolic(event:Event):void{
				buscarListaSolic(1);
			}
			
			public function buscarAcred():void{
				var wsCat:WebService = new WebService;
				var params:Array = new Array;
				
				btnBuscar.setFocus();
				dgAcred.dataProvider = null;
				
				du.initWsCat(wsCat);
				du.sCursor();
				global.bloquear();
				
				du.ejecutaWsMethod(wsCat,function(evt:ResultEvent):void {											
					_xmlAcred = new XML(evt.result);
					
					du.rCursor();
					du.closeWs(wsCat);	
					global.desbloquear();
					
					if (_xmlAcred.elements().length() > 0){
						dgAcred.dataProvider = _xmlAcred.Table;
					}
					seleccionaAcred();
				});
				params[0] = global.obtenerUsuario();
				params[1] = txtCodAcred.text;
				params[2] = txtNombre.text;
				params[3] = txtPaterno.text;
				//Informacion de Acreditados sin grupo asignado
				wsCat.getInfoAcred.send(9, params);	
			}
			
			public function buscarListaSolic(tipo:int):void{
				var wsCat:WebService = new WebService;
				var params:Array = new Array;
				var acred:String = dgAcred.selectedItem.CODIGO;
				
				du.initWsCat(wsCat);
				du.sCursor();
				
			 	if(tipo == 1)
			 		global.bloquear();
			 		
			 	du.ejecutaWsMethod(wsCat,function(evt:ResultEvent):void {											
					_xmlSolic = new XML(evt.result);
					
					du.rCursor();
					du.closeWs(wsCat);	
					global.desbloquear();
					
					dgSolic.dataProvider = null;
					if (_xmlSolic.elements().length() > 0){
						dgSolic.dataProvider = _xmlSolic.Table;
						if (accionSolic == 2){
							dgSolic.validateNow();
							dgSolic.verticalScrollPosition = vScroll;
							dgSolic.selectedIndex = indSolic;
							accionSolic = 0;
						}
						activarContGarantia(true);
					}
					else
						activarContGarantia(false);
					seleccionaSolic();
				});
				params[0] = acred;
				//Informacion de las solicitudes de disposicion (Credito Revolvente)
				wsCat.getInfoAcred.send(14, params);	
			}
			
			public function eliminarSolic():void{
				var indSolic:int = dgSolic.selectedIndex;
				if(_xmlSolic.Table[indSolic].SITUACION == 'S'){
					Alert.show("¿Desea eliminar la solicitud seleccionada?", titulo, Alert.YES|Alert.NO, null, manejadorEliminarSolic, global.iQuest);
				}
				else
					Alert.show("No es posible eliminar la solicitud.\n\nVerifique la situación que presenta la misma.", titulo, 4, null, null, global.iAlert);
			}
			
			private function formatearMonto(item:Object, column:DataGridColumn):String{
				var result:String;
                result = global.formatearMoneda(item[column.dataField]);
                return result;
			}
			
			public function iniVar():void{
				this.indSolic = -1;
				this.vScroll = undefined;
			}
			
			public function initApp():void{
				du = new Utils();
				global = new Globales();
				permiso = new Permisos();
				titulo = "Mantenimiento de Solicitud";
				alta = false;
				borrado = false;
				consulta = false;
				edicion = false;
				permisos();
			}
			
			public function initConexion():void{				
				wsMS = new WebService();			
				wsMS.wsdl = Application.application.wsStr.wsdlServ.toString();
				wsMS.loadWSDL();
			}			
			
			public function manejadorEliminarSolic(e:CloseEvent):void{
				if(e.detail == Alert.YES){    	
					var acred:String = dgAcred.selectedItem.CODIGO;
					var ciclo:String = dgSolic.selectedItem.CICLO; 
					var autorizado:String = dgSolic.selectedItem.FAUTORCRR;
					var secuencia:String = dgSolic.selectedItem.SECUENCIA;
					initConexion();
					du.sCursor();
					global.bloquear();
					wsMS.addEventListener(ResultEvent.RESULT, setEliminaSolicDisp);
					wsMS.setEliminaSolicDisp.send(acred, ciclo, "I", autorizado, secuencia, global.obtenerUsuario());
			    } 
			}
			
			public function mostrarFormSolic(tipo:int):void{
				//tipo = 1 NUEVO REGISTRO
				//tipo = 2 MODIFICA REGISTRO
				var acred:String;
				var nomAcred:String;
				var coord:String;
				var nomCoord:String;
				var promotor:String;
				var munic:String;
				var indAcred:int;
				var ciclo:String;
				var autorizado:String;
				var sec:String;
				if(edicion == true){
					var comMttoSolic:MttoSolicitudRevInd = new MttoSolicitudRevInd();
					comMttoSolic.currentState = '';
					//indAcred = dgAcred.selectedIndex;
					acred = dgAcred.selectedItem.CODIGO;
					nomAcred = dgAcred.selectedItem.NOMBRE_CL;
					coord = dgAcred.selectedItem.CDGCO;
					nomCoord = dgAcred.selectedItem.NOMCO;
					promotor = dgAcred.selectedItem.CDGPRPE;
					munic = dgAcred.selectedItem.MUNIC;
					switch(tipo){
						case 1: 
							//ASIGNACION QUE ESTABLECE AL OBJETO PADRE
							objMtto = this;	
							
							initConexion();
							du.sCursor();
							
							du.ejecutaWsMethod(wsMS,function(evt:ResultEvent):void {											
								res = evt.result.toString();
								
								du.rCursor();
								du.closeWs(wsMS);	
								
								if(res.substr(0,1) == "1"){
									comMttoSolic = MttoSolicitudRevInd(PopUpManager.createPopUp(objMtto,MttoSolicitudRevInd,true));
									comMttoSolic.addEventListener(Event.REMOVED_FROM_STAGE, actualizarSolic);
									PopUpManager.centerPopUp(comMttoSolic);
									comMttoSolic.registraInfoSolic(acred, nomAcred, ciclo, munic, coord, nomCoord, promotor);
								}
								else
									Alert.show(res.substr(2,res.length -1), titulo, 4, null, null, global.iAlert);
							});
							wsMS.getSituacionSolic.send(acred, 'I');	//Método que valida que no exista mas de una solicitud en proceso							
							break;
						case 2: 
							if (dgSolic.selectedIndex >= 0){
								accionSolic = tipo;					
								comMttoSolic = MttoSolicitudRevInd(PopUpManager.createPopUp(this,MttoSolicitudRevInd,true));  
								comMttoSolic.addEventListener(Event.REMOVED_FROM_STAGE, actualizarSolic);
								PopUpManager.centerPopUp(comMttoSolic);
								iniVar();
								this.vScroll = dgSolic.verticalScrollPosition;		
								this.indSolic = dgSolic.selectedIndex;
								ciclo = dgSolic.selectedItem.CICLO;
								autorizado = dgSolic.selectedItem.FAUTORCRR;
								sec = dgSolic.selectedItem.SECUENCIA;
								comMttoSolic.cargaInfoSolic(acred, nomAcred, ciclo, sec, autorizado, munic, coord, nomCoord, promotor);
							}
							else
								Alert.show("Debe seleccionar el registro de Solicitud", titulo, 4, null, null, global.iAlert); 
							break;
					}
				}
			}
			
			public function permisos():void{
				var wsMS:WebService = new WebService;
				var mod_id:String = global.obtenerModulo();
				var perfil_id:String = global.obtenerCadPerfil();
				var Params:Array;
				var cont:int;
				
				du.initWs(wsMS);
				du.sCursor();
					
				du.ejecutaWsMethod(wsMS,function(evt:ResultEvent):void {											
					dPermisos = new XML(evt.result.toString());
						
					cont = dPermisos.elements().length();
					
					for(var i:int = 0; i < cont; i++){
						switch(dPermisos.Table[i].OPCION.toString()){
							case "C":
								consulta = true;
								if (permiso.permisosModSolic(global.obtenerArrayPerfil())){
									alta = true;
									edicion = true;
									borrado = true;
								}
								break;	
							/*case "B":
								borrado = true;
								break;
							case "I":
								alta = true;
								break;
							case "E":
								edicion = true;
								break;*/
						}
					}
					du.rCursor();
					du.closeWs(wsMS);					
				});
				Params = new Array();
				Params[0] = perfil_id;
				Params[1] = mod_id;
				wsMS.ESLoginMethods.send(14,Params);	//Método que indica las opciones disponibles para el usuario	
			}		
			
			public function seleccionaAcred():void{
				dgSolic.dataProvider = null;
				dgGarantia.dataProvider = null;
				activarContGarantia(false);
				if (dgAcred.selectedIndex >= 0){
					activarContSolic(true);
				}
				else{
					activarContSolic(false);
				}
			}
			
			public function seleccionaSolic():void{
				dgGarantia.dataProvider = null;
				activarContGarantia(false);
				if (dgSolic.selectedIndex >= 0){
					activarContModSolic(true);
					activarContGarantia(true);
				}
				else{
					activarContModSolic(false);
				}
			}
			
			private function setEliminaSolicDisp(event:ResultEvent):void{
				wsMS.disconnect();
				du.rCursor();
				global.desbloquear();
				wsMS.removeEventListener(ResultEvent.RESULT, setEliminaSolicDisp);
				var res:String = new String(event.result.toString());
				if (res.substr(0,1) == "1")
					buscarListaSolic(1);
				else
					Alert.show(res.substr(2,res.length - 1), titulo, 4, null, null, global.iAlert);
			}
			
			public function validaSituacionSolic(acred:String):void{
				initConexion();
				du.sCursor();
							
				du.ejecutaWsMethod(wsMS,function(evt:ResultEvent):void {											
					res = evt.result.toString();
								
					du.rCursor();
					du.closeWs(wsMS);				
				});
				wsMS.getSituacionSolic.send(acred, 'I');	
			}
		]]>
	</mx:Script>
	<mx:Canvas width="800" height="500" backgroundColor="#FFFFFF" backgroundAlpha="1.0" verticalScrollPolicy="off">
		<mx:Canvas id="cnvDetalle" x="18.5" y="84" width="763.5" height="146" cornerRadius="10" borderStyle="solid" borderColor="#7B8B93" visible="true">
			<Data:RowColorDataGrid id="dgAcred" x="10" y="10" width="741.5" height="124" sortableColumns="true" resizableColumns="false" 
				verticalScrollPolicy="auto" horizontalScrollPolicy="auto" itemClick="seleccionaAcred()" doubleClickEnabled="true" 
				itemDoubleClick="buscarListaSolic(1)"> 
				<Data:columns>
					<mx:DataGridColumn headerText="CODIGO" dataField="CODIGO" width="70"/>
					<mx:DataGridColumn headerText="ACREDITADO" dataField="NOMBRE_CL" width="250"/>
					<mx:DataGridColumn headerText="SUCURSAL" dataField="COORD" width="80"/>
					<mx:DataGridColumn headerText="NOMBRE SUCURSAL" dataField="NOMCO" width="170"/>
					<mx:DataGridColumn headerText="NOMBRE EJECUTIVO" dataField="NOMASESOR" width="200"/>
				</Data:columns>
			</Data:RowColorDataGrid>
		</mx:Canvas>
		<mx:Label x="18" y="10" text="ACREDITADO" fontSize="12" fontWeight="bold" fontStyle="italic"/>
		<mx:Canvas x="721" y="39" width="61" height="37" cornerRadius="10" borderStyle="solid" borderColor="#7B8B93" visible="true">
			<mx:Button id="btnBuscar" x="10" y="3" icon="@Embed(source='assets/ico_lupa.png')" click="buscarAcred()" toolTip="Buscar Acreditado" width="40"/>
		</mx:Canvas>
		<mx:Canvas id="cnvDetalle0" x="18.5" y="289" width="763.5" height="200" cornerRadius="10" borderStyle="solid" borderColor="#7B8B93" visible="true" verticalScrollPolicy="off">
			<Data:RowColorDataGrid id="dgSolic" x="10" y="10" width="741.5" height="178" sortableColumns="false" resizableColumns="false" 
				verticalScrollPolicy="auto" itemClick="seleccionaSolic()" doubleClickEnabled="true" itemDoubleClick="mostrarFormSolic(2)" 
				horizontalScrollPolicy="auto"> 
				<Data:columns>
					<mx:DataGridColumn headerText="CICLO" dataField="CICLO" width="50"/>
					<mx:DataGridColumn headerText="SOLICITUD" dataField="FECSOLIC" width="90"/>
					<mx:DataGridColumn headerText="FECHA DE ENTREGA" dataField="FECENTRE" width="140"/>
					<mx:DataGridColumn headerText="AUTORIZADO" dataField="FAUTORCRR" width="100"/>
					<mx:DataGridColumn headerText="DURACION" dataField="DURACION" width="80"/>
					<mx:DataGridColumn headerText="MONTO SOLICITADO" dataField="CANTSOLIC" width="140" labelFunction="formatearMonto"/>
					<mx:DataGridColumn headerText="MONTO AUTORIZADO" dataField="CANTAUTOR" width="140" labelFunction="formatearMonto"/>
					<mx:DataGridColumn headerText="SITUACION" dataField="NSOLICITUD" width="100"/>
				</Data:columns>
			</Data:RowColorDataGrid>
		</mx:Canvas>
		<mx:Canvas x="579" y="244" width="203" height="37" cornerRadius="10" borderStyle="solid" borderColor="#7B8B93" visible="true" id="canvas1">
			<mx:Button id="btnAgregarSolic" x="103" y="3" icon="@Embed(source='assets/add.png')" enabled="false" click="mostrarFormSolic(1)" toolTip="Agregar Solicitud" width="40"/>
			<mx:Button id="btnEliminarSolic" x="151" y="3" icon="@Embed(source='assets/delete-icon.png')" enabled="false" click="eliminarSolic()" toolTip="Eliminar Solicitud" width="40"/>
			<mx:Button id="btnEditarSolic" x="58" y="3" icon="@Embed(source='assets/edit.png')" enabled="false" click="mostrarFormSolic(2)" toolTip="Editar Solicitud" width="40"/>
			<mx:Button id="btnDatosSolic" x="10" y="3" icon="@Embed(source='assets/folder.png')" click="buscarListaSolic(1)" enabled="false" toolTip="Solicitudes del Acreditado" width="40"/>
		</mx:Canvas>
		<mx:Label x="18.5" y="260" text="SOLICITUD PARA EL CICLO" fontSize="12" fontWeight="bold" fontStyle="italic"/>
		<mx:Label x="18.5" y="465" text="GARANTÍA" width="247" fontSize="12" fontWeight="bold" fontStyle="italic" visible="false"/>
		<mx:Canvas x="722" y="449" width="60" height="37" cornerRadius="10" borderStyle="solid" borderColor="#7B8B93" visible="false">
			<mx:Button id="btnDatosAcred" x="9" y="3" icon="@Embed(source='assets/folder.png')" enabled="false" toolTip="Garantías del Acreditado" width="40"/>
		</mx:Canvas>
		<mx:Canvas id="cnvDetalle2" x="18.5" y="494" width="763.5" height="146" cornerRadius="10" borderStyle="solid" borderColor="#7B8B93" visible="false" verticalScrollPolicy="off">
			<Data:RowColorDataGrid id="dgGarantia" x="10" y="10" width="741.5" height="124" sortableColumns="false"
			  	draggableColumns="false" resizableColumns="false" verticalScrollPolicy="on" itemClick="seleccionaAcred()"> 
				<Data:columns>
					<mx:DataGridColumn headerText="CODIGO" dataField="CDGCL" width="50"/>
					<mx:DataGridColumn headerText="ACREDITADO" dataField="NOMBRE_CL" width="180"/>
					<mx:DataGridColumn headerText="PROYECTO DE INVERSION" dataField="NOMBRE" width="120"/>
					<mx:DataGridColumn headerText="FECHA SOL." dataField="FECSOL" width="65"/>
					<mx:DataGridColumn headerText="MONTO SOL." dataField="CANTSOLIC" width="65"/>
					<mx:DataGridColumn headerText="MONTO AUTORIZADO" dataField="CANTAUTOR" width="100" labelFunction="formatearMonto"/>
				</Data:columns>
			</Data:RowColorDataGrid>
		</mx:Canvas>
	</mx:Canvas>
	<mx:Canvas x="18" y="39" width="695" height="37" cornerRadius="10" borderStyle="solid" borderColor="#7B8B93" visible="true">
		<mx:Label id="lblCodAcred" x="15" y="7" text="Código:" textAlign="right"/>
		<mx:TextInput id="txtCodAcred" x="64" y="6" width="68" enter="buscarAcred()" maxChars="6" restrict="0-9"/>
		<mx:Label id="lblPaterno" x="470" y="7" text="Apellido Paterno:" textAlign="right"/>
		<mx:TextInput id="txtPaterno" x="564" y="6" width="110" enter="buscarAcred()" maxChars="50"/>
		<mx:Label id="lblNombre" x="158" y="7" text="Nombre/Razón Social:" textAlign="right"/>
		<mx:TextInput id="txtNombre" x="277" y="6" width="170" enter="buscarAcred()" maxChars="50"/>
	</mx:Canvas>
</mx:Canvas>