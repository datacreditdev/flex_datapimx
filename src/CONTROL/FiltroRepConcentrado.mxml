<?xml version="1.0" encoding="utf-8"?>
<mx:Canvas xmlns:mx="http://www.adobe.com/2006/mxml" width="292" height="360" backgroundAlpha="1.0" backgroundColor="#FFFFFF" creationPolicy="all" creationComplete="initApp()">
	<mx:states>
		<mx:State name="coordinacion">
			<mx:RemoveChild target="{cboAsesor}"/>
			<mx:RemoveChild target="{label5}"/>
			<mx:SetProperty target="{canvas2}" name="height" value="124.5"/>
			<mx:SetProperty target="{label4}" name="y" value="186"/>
			<mx:SetProperty target="{canvas1}" name="y" value="205"/>
			<mx:SetProperty target="{btnGenerar}" name="y" value="280"/>
			<mx:SetProperty target="{btnLimpiar}" name="y" value="280"/>
			<mx:SetProperty name="height" value="316"/>
		</mx:State>
	</mx:states>
	
	<mx:NumberValidator id="asesorV" source="{cboAsesor}" property="selectedIndex"
	minValue="1" triggerEvent="" lowerThanMinError="Asesor Requerido"/>
	 
	<mx:NumberValidator id="coordV" source="{cboCoord}" property="selectedIndex"
	minValue="1" triggerEvent="" lowerThanMinError="Sucursal Requerida"/>
	
	<mx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import Data.Globales;
			import Data.Utils;
			import mx.core.Application;
			import mx.containers.TitleWindow;	
			import mx.validators.Validator;		
			import mx.managers.PopUpManager;
			import mx.controls.Alert;
			import mx.effects.easing.Elastic;
			import mx.rpc.soap.WebService;
			import mx.rpc.events.ResultEvent;
			import mx.rpc.events.FaultEvent;
			import mx.utils.ObjectUtil;
			
			[Bindable]
			private var _xmlReg:XML =  new XML();
			[Bindable]
			private var _xmlCoord:XMLList =  new XMLList();
			[Bindable]
			private var _xmlAsesor:XML =  new XML();
			
			public var regObj:ArrayCollection = new ArrayCollection();
			public var coordObj:ArrayCollection = new ArrayCollection();
			public var asesorObj:ArrayCollection = new ArrayCollection();
			
			public var wsMS:WebService;
			public var du:Utils;
			public var rep:String;
			private var global:Globales;
			
			public function agregaInicial(codigo:String, texto:String):Object{
				var oItem:Object = new Object();
				oItem.codigo = codigo;	
				oItem.nombre = texto;
				return oItem;
			}		
			
			public function cargaAsesor():void{
				var wsCat:WebService = new WebService;
				var params:Array = new Array;
				
				du.initWsCat(wsCat);
				du.sCursor();
						
				du.ejecutaWsMethod(wsCat,function(evt:ResultEvent):void {											
					_xmlAsesor = new XML(evt.result.toString());
						
					du.rCursor();
					du.closeWs(wsCat);	
						
					asesorObj.removeAll();
					asesorObj.refresh();
					asesorObj.addItem(agregaInicial("000000", "--Seleccionar--"))	
						
					if(_xmlAsesor.elements().length() > 0)
						formateaAsesor();
					if(_xmlAsesor.elements().length() == 1){
						cboAsesor.selectedIndex = 1;
						cboAsesor.enabled = false;
					}
				});
				params[0] = cboCoord.selectedItem.codigo;
				wsCat.getCatalogoGral.send(24, params);
			}		
			
			public function cargaCoord():void{
				_xmlCoord = Application.application._xmlSuc.Table.(CDGRG.toString().toLowerCase() == cboRegion.selectedItem.codigo.toString().toLowerCase());
					
				coordObj.removeAll();
				coordObj.refresh();	
				coordObj.addItem(agregaInicial("000", "--Seleccionar--"))
				asesorObj.removeAll();
				asesorObj.refresh();
				asesorObj.addItem(agregaInicial("000000", "--Seleccionar--"))
				
				cboCoord.enabled = true;	
				formateaCoord();
				
				if(_xmlCoord.length() == 1){
					cboCoord.selectedIndex = 1;
					cboCoord.enabled = false;
					cargaAsesor();
				}
			}			
						
			public function cargaRegion():void{ 				  
				_xmlReg = Application.application._xmlReg;
				formateaRegion();
				
				if(_xmlReg.elements().length() == 1){
					cboRegion.selectedIndex = 1;
					cboRegion.enabled = false;	
				}
				cargaCoord();
			}				
					
			public function formateaAsesor():void{
				var cont:int = _xmlAsesor.elements().length();
				var oItem:Object;
				
				for(var i:int = 0; i < cont; i++){
					oItem = new Object();
					oItem.codigo = _xmlAsesor.Table[i].CODIGO;
					oItem.nombre = _xmlAsesor.Table[i].NOMBREC;
					asesorObj.addItem(oItem);
				}
			}			
						
			public function formateaCoord():void{
				var cont:int = _xmlCoord.length();
				var oItem:Object;
				
				for(var i:int = 0; i < cont; i++){
					oItem = new Object();
					oItem.codigo = _xmlCoord.CODIGO[i].toString();
					oItem.nombre = _xmlCoord.NOMBRE[i].toString();
					coordObj.addItem(oItem);
				}
			}			
			
			public function formateaRegion():void{
				var cont:int = _xmlReg.elements().length();
				var oItem:Object;
				
				for(var i:int = 0; i < cont; i++){
					oItem = new Object();
					oItem.codigo = _xmlReg.Table[i].CODIGO;
					oItem.nombre = _xmlReg.Table[i].NOMBRE;
					regObj.addItem(oItem);
				}
			}	
			
			public function generar():void{
				if (valida()){					
					var consulta:String;
					var periodo:Number;
					var fecha:String
					var fechaFin:String;
					var fecIni:Date;
					var fecFin:Date;
					var fecAux:Date;
					var id:String = "&id=" + rep;
					var usuario:String = "&usuario=" + global.obtenerUsuario();
					var nomUsuario:String = "&nomUsuario=" + Application.application.NOM_U_ID;
					var region:String = "&region=" + cboRegion.selectedItem.codigo;
					var coord:String = "&coord=" + cboCoord.selectedItem.codigo;
					if (currentState == null)
						var asesor:String = "&asesor=" + cboAsesor.selectedItem.codigo;
					var fec:Date = global.obtenerFechaSistema();
					if(fec.getDay() >= 5){
						periodo = fec.getDay() - 4;
						fecFin = new Date(fec.getFullYear(),fec.getMonth(),fec.getDate() - periodo); 
					}	
					else if(fec.getDay() < 5){
						periodo = 4 - fec.getDay();
						fecAux = new Date(fec.getFullYear(),fec.getMonth(),fec.getDate() - 7);
						fecFin = new Date(fecAux.getFullYear(),fecAux.getMonth(),fecAux.getDate() + periodo);
					}
					fecIni = new Date(fecFin.getFullYear(),fecFin.getMonth(),fecFin.getDate() - 6);
					fecha = "&fecha=" + global.formatearFechaSep(fecIni, "-");
					fechaFin = "&fechaFin=" + global.formatearFechaSep(fecFin, "-");
					
					if(currentState == null)
						consulta = global.urlPdf + id + fecha + fechaFin + usuario + nomUsuario + coord + asesor;
					else if(currentState == 'coordinacion')
					 	consulta = global.urlPdf + id + fecha + fechaFin + usuario + nomUsuario + coord;
					
					Application.application.muestraPdf(consulta);
					//Alert.show(consulta);
				}			
			}
						
			public function init(rep:String, titulo:String, estado:String):void{
				this.rep = rep;
				lblTitulo.text = titulo.toUpperCase();
				currentState = estado;
				limpiar();
			}		
						
			public function initApp():void{
				global = new Globales();
				du = new Utils();
			}		
			
			public function initConexion():void{				
				wsMS = new WebService();			
				wsMS.wsdl = Application.application.wsStr.wsdlServ.toString();
				wsMS.loadWSDL();
			}	
		
			public function limpiar():void{
				var fec:Date;
				cboRegion.enabled = true;
				cboCoord.enabled = true;
				cboAsesor.enabled = true;
				regObj.removeAll();
				regObj.refresh();
				regObj.addItem(agregaInicial("000", "--Seleccionar--"));		
				cboRegion.dataProvider = regObj;		
				cboCoord.dataProvider = coordObj;
				cboAsesor.dataProvider = asesorObj;
				//coordObj.removeAll();
				//coordObj.refresh();
				//coordObj.addItem(agregaInicial("000", "--Seleccionar--"));
				//asesorObj.removeAll();
				//asesorObj.refresh();
				//asesorObj.addItem(agregaInicial("000000", "--Seleccionar--"));
				cargaRegion();
				rdbSAct.selected = true;
			}
				
			public function valida():Boolean{
				var invalidArray:Array;
				if(currentState == null)
					invalidArray = Validator.validateAll([asesorV]);
				else if(currentState == 'coordinacion')
					invalidArray = Validator.validateAll([coordV]);
				
				if(invalidArray.length > 0){
					return false;
				}		
				return true;
			}
		]]>
	</mx:Script>
	<mx:Label id="lblTitulo" x="18" y="10" width="247" fontSize="12" fontWeight="bold" fontStyle="italic"/>
	<mx:Canvas x="17.95" y="53.5" width="264.05" height="165.5" styleName="canvasMod" id="canvas2">
		<mx:ComboBox id="cboRegion" x="10" y="27.5" labelField="nombre" change="cargaCoord()" width="170"></mx:ComboBox>
		<mx:ComboBox id="cboCoord" x="10" y="80" labelField="nombre" change="cargaAsesor()" width="170"></mx:ComboBox>
		<mx:ComboBox id="cboAsesor" x="10" y="129.5" labelField="nombre" width="242.05"></mx:ComboBox>
		<mx:Label x="10" y="112" text="Asesor" width="61.75" height="20" id="label5"/>
		<mx:Label x="10" y="10" text="Región" width="61.75" height="20"/>
		<mx:Label x="10" y="59.5" text="Sucursal" width="81" height="23"/>
	</mx:Canvas>
	<mx:Label x="71" y="227" text="Periodo" id="label4"/>
	<mx:Canvas x="71" y="246" width="150" styleName="canvasMod" id="canvas1" height="60">
		<mx:RadioButtonGroup id="semana"/>
		<mx:RadioButton id="rdbSAnt" x="21.25" enabled="false" label="Semana Anterior" y="6" width="116.75" groupName="semana" value="-7"/>
		<mx:RadioButton id="rdbSAct" x="21.25" label="Semana Actual" y="30" groupName="semana" value="0" selected="true" width="116.75"/>
	</mx:Canvas>
	<mx:Button x="71.25" y="321" label="Generar" click="generar()" id="btnGenerar"/>
	<mx:Button x="149.75" y="321" label="Limpiar" width="71" height="24" click="limpiar()" id="btnLimpiar"/>
	<mx:Label x="18" y="34" text="Criterios de Selección" width="124.25" id="label2"/>
</mx:Canvas>
