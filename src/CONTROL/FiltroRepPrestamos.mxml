<?xml version="1.0" encoding="utf-8"?>
<mx:Canvas xmlns:mx="http://www.adobe.com/2006/mxml" width="100%" height="100%" horizontalScrollPolicy="off"
	backgroundAlpha="1.0" backgroundColor="#FFFFFF" creationPolicy="all" creationComplete="initApp()">
	
	<mx:NumberValidator id="asesorV" source="{cboAsesor}" property="selectedIndex"
	 minValue="1" triggerEvent="" lowerThanMinError="Asesor Requerido"/>
	 
	<mx:StringValidator id="tipoCartV" source="{tipoCart}" property="selectedValue"  
     required="true" requiredFieldError="Tipo de Cartera requerido"/> 
	
	<mx:Metadata>
		[Event(name="enviar", type="enviar")]
	</mx:Metadata>
	
	<mx:Script>
		<![CDATA[
			import Data.Globales;
			import Data.ExcelExportXls;
			import Data.Utils;
			import mx.collections.ArrayCollection;
			import mx.containers.TitleWindow;
			import mx.controls.Alert;
			import mx.core.Application;
			import mx.effects.easing.Elastic;
			import mx.managers.PopUpManager;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			import mx.rpc.soap.WebService;
			import mx.utils.ObjectUtil;
			import mx.validators.Validator;
			
			[Bindable]
			private var _xmlReg:XML = new XML();
			[Bindable]
			private var _xmlCoord:XMLList = new XMLList;
			[Bindable]
			private var _xmlAsesor:XML = new XML();
			
			public var regObj:ArrayCollection = new ArrayCollection();
			public var coordObj:ArrayCollection = new ArrayCollection();
			public var asesorObj:ArrayCollection = new ArrayCollection();
			
			public var rep:String;
			private var titulo:String; 
			private var du:Utils;
			private var global:Globales;
			
			public function agregaInicial(codigo:String, texto:String):Object{
				var oItem:Object = new Object();
				oItem.codigo = codigo;	
				oItem.nombre = texto;
				return oItem;
			}		
			
			public function cargaAsesor():void{
				var wsCat:WebService = new WebService;
				var params:Array = new Array;
				
				du.initWsCat(wsCat);
				du.sCursor();
				
				du.ejecutaWsMethod(wsCat,function(evt:ResultEvent):void {											
					_xmlAsesor = new XML(evt.result.toString());
						
					du.rCursor();
					du.closeWs(wsCat);	
						
					asesorObj.removeAll();
					asesorObj.refresh();
					asesorObj.addItem(agregaInicial("000000", "--Todos--"))	
						
					if(_xmlAsesor.elements().length() > 0)
						formateaAsesor();
					if(_xmlAsesor.elements().length() == 1){
						cboAsesor.selectedIndex = 1;
						cboAsesor.enabled = false;
					}
				});
				params[0] = obtieneSucursal();
				wsCat.getCatalogoGral.send(8, params);
			}		
			
			public function cargaSucursal():void{
				_xmlCoord = Application.application._xmlSuc.Table.(CDGRG.toString().toLowerCase() == obtieneRegion().toLowerCase());
					
				coordObj.removeAll();
				coordObj.refresh();	
				coordObj.addItem(agregaInicial("000", "--Todas--"))
				asesorObj.removeAll();
				asesorObj.refresh();
				asesorObj.addItem(agregaInicial("000000", "--Todos--"))
				
				cboSucursal.enabled = true;	
				formateaSucursal();
				
				if(_xmlCoord.length() == 1){
					cboSucursal.selectedIndex = 1;
					cboSucursal.enabled = false;
					cargaAsesor();
				}
			}			
						
			public function cargaRegion():void{ 				  
				_xmlReg = Application.application._xmlReg;
				formateaRegion();
				if(_xmlReg.elements().length() == 1){
					cboRegion.selectedIndex = 1;
					cboRegion.enabled = false;
				}
				cargaSucursal();
			}				
			
			public function enviar():void{
				dispatchEvent(new Event("enviar"));
			}		
			
			public function formateaAsesor():void{
				var cont:int = _xmlAsesor.elements().length();
				var oItem:Object;
				
				for(var i:int = 0; i < cont; i++){
					oItem = new Object();
					oItem.codigo = _xmlAsesor.Table[i].CODIGO;
					oItem.nombre = _xmlAsesor.Table[i].NOMBRE;
					asesorObj.addItem(oItem);
				}
			}			
						
			public function formateaSucursal():void{
				var cont:int = _xmlCoord.length();
				var oItem:Object;
				
				for(var i:int = 0; i < cont; i++){
					oItem = new Object();
					oItem.codigo = _xmlCoord.CODIGO[i].toString();
					oItem.nombre = _xmlCoord.NOMBRE[i].toString();
					coordObj.addItem(oItem);
				}
			}			
			
			public function formateaRegion():void{
				var cont:int = _xmlReg.elements().length();
				var oItem:Object;
				
				for(var i:int = 0; i < cont; i++){
					oItem = new Object();
					oItem.codigo = _xmlReg.Table[i].CODIGO;
					oItem.nombre = _xmlReg.Table[i].NOMBRE;
					regObj.addItem(oItem);
				}
			}	
			
			public function generar():void{
				if (valida()){	
					if (rep == "-1")
						enviar();
					else if(rep != "-1"){				
						var consulta:String;
						var id:String = "&id=" + rep;
						var cartera:String = "&tipoCart=" + tipoCart.selectedValue.toString();
						var usuario:String = "&usuario=" + global.obtenerUsuario();
						var nomUsuario:String = "&nomUsuario=" + Application.application.NOM_U_ID;
						var region:String = "&region=" + obtieneRegion();
						var coord:String = "&coord=" + obtieneSucursal();
						var asesor:String = "&asesor=" + obtieneAsesor;
					}
				}			
			}
						
			public function init(rep:String, titulo:String, estado:String):void{
				global = new Globales();
				du = new Utils();
				
				this.rep = rep;
				this.titulo = titulo;
				lblTitulo.text = titulo.toUpperCase();
				currentState = estado;
				limpiar();
			}		
						
			public function initApp():void{
			}		
			
			public function limpiar():void{
				var fec:Date;
				cboRegion.enabled = true;
				cboSucursal.enabled = true;
				cboAsesor.enabled = true;
				regObj.removeAll();
				regObj.refresh();
				regObj.addItem(agregaInicial("000", "--Todas--"));
				cboRegion.dataProvider = regObj;		
				cboSucursal.dataProvider = coordObj;
				cboAsesor.dataProvider = asesorObj;
				cargaRegion();		
				fec = global.obtenerFechaSistema();
				dtfIniDesde.selectedDate = global.seleccionarDiaHabil(new Date(fec.fullYear,fec.month,fec.date - 1));
				dtfIniHasta.selectedDate = global.seleccionarDiaHabil(new Date(fec.fullYear,fec.month,fec.date - 1));
				dtfFinDesde.selectedDate = null;
				dtfFinHasta.selectedDate = null;
				dtfPagos.selectedDate = global.seleccionarDiaHabil(new Date(fec.fullYear,fec.month,fec.date - 1));
				chkSitSaldo.selected = true;
				chkSitCart.selected = false;
				chkSitTes.selected = false;
				chkSitLiq.selected = false;
				chkSitDev.selected = false;
				tipoCart.selectedValue = 0;
				prestamos.selectedValue = 0;
				ciclos.selectedValue = 0;
				ciclos.dispatchEvent(new Event("change"));
				rdbUltCiclo.enabled = true;	
			}
			
			public function obtieneAsesor():String{
				return cboAsesor.selectedItem.codigo;
			}
			
			public function obtieneRegion():String{
				return cboRegion.selectedItem.codigo;
			}
			
			public function obtieneSucursal():String{
				return cboSucursal.selectedItem.codigo;
			}
				
			public function valida():Boolean{
				return true;
			}
			
			public function validaFechaIni():void{
				if(dtfIniDesde.selectedDate > dtfIniHasta.selectedDate){
					du.mostrarMensaje("La fecha inicial debe ser menor o igual a la fecha final.",titulo,4,null,null,global.iAlert);
					dtfIniDesde.selectedDate = dtfIniHasta.selectedDate;
				}
			}
			
			public function validaFechaFin():void{
				if(dtfFinDesde.selectedDate == null)
					dtfFinDesde.selectedDate = dtfFinHasta.selectedDate;
				if(dtfFinHasta.selectedDate == null)
					dtfFinHasta.selectedDate = dtfFinDesde.selectedDate;
				if(dtfFinDesde.selectedDate > dtfFinHasta.selectedDate){
					du.mostrarMensaje("La fecha inicial debe ser menor o igual a la fecha final.",titulo,4,null,null,global.iAlert);
					dtfFinDesde.selectedDate = dtfFinHasta.selectedDate;
				}
			}
			
			public function validaSituacion(event:Event):void{
				if(chkSitSaldo.selected == false && chkSitCart.selected == false && chkSitTes.selected == false &&
				   chkSitLiq.selected == false && chkSitDev.selected == false){
					var obj:CheckBox = event.target as CheckBox;
					obj.selected = true;
					du.mostrarMensaje("Debe seleccionar al menos una Situación.",titulo,4,null,null,global.iAlert);
				}
				if(chkSitDev.selected == true)
					rdbUltCiclo.enabled = false;
				else
					rdbUltCiclo.enabled = true;
			}
			
			public function validaCiclos():void{
				if(ciclos.selectedValue == "0")
					chkSitDev.enabled = true;
				else if(ciclos.selectedValue == "1")
					chkSitDev.enabled = false;		
			}	
			
		]]>
	</mx:Script>
	<mx:Label id="lblTitulo" x="18" y="10" width="247" fontSize="12" fontWeight="bold" fontStyle="italic"/>
	<mx:Label x="18" y="34" text="Criterios de Selección" width="124.25" id="label2"/>
	<mx:Canvas x="17.95" y="53.5" width="264.05" height="165.5" styleName="canvasMod" id="cnvCriterio">
		<mx:ComboBox id="cboRegion" x="10" y="27.5" labelField="nombre" change="cargaSucursal()" width="170"/>
		<mx:ComboBox id="cboSucursal" x="10" y="80" labelField="nombre" change="cargaAsesor()" width="170"/>
		<mx:ComboBox id="cboAsesor" x="10" y="129.5" labelField="nombre" width="242.05"/>
		<mx:Label x="10" y="112" text="Asesor" height="20"/>
		<mx:Label x="10" y="10" text="Región" height="20"/>
		<mx:Label x="10" y="59.5" text="Oficina" height="23"/>
	</mx:Canvas>
	<mx:Label x="18" y="227" text="Tipo de Cartera" id="lblTipoCart"/>
	<mx:Canvas x="18" y="246" width="264" height="61" styleName="canvasMod" id="cnvTipoCart">
		<mx:RadioButtonGroup id="tipoCart"/>
		<mx:RadioButton x="9.5" y="30" label="Todas" height="23" width="65" groupName="tipoCart" value="0" selected="true"/>
		<mx:RadioButton x="10" y="5" label="Cartera Vigente" height="23" groupName="tipoCart" value="1"/>
		<mx:RadioButton x="144" y="5" label="Cartera Vencida" height="23" groupName="tipoCart" value="2"/>
	</mx:Canvas>
	<mx:Label x="18" y="315" text="Préstamos" id="lblPrestamos"/>
	<mx:Canvas x="18" y="334" width="264" height="61" styleName="canvasMod" id="cnvPrestamos">
		<mx:RadioButtonGroup id="prestamos"/>
		<mx:RadioButton x="64.5" y="5" label="Individuales" height="23" width="160" id="chkPrnGrupales" groupName="prestamos" value="0"/>
		<mx:RadioButton x="64.5" y="31" label="Grupales" height="23" width="133" id="chkPrnAcred" groupName="prestamos" value="1" enabled="false"/>
	</mx:Canvas>
	<mx:Label x="290" y="129.5" text="Fin del Ciclo" id="lblFinCiclo"/>
	<mx:Canvas x="290" y="149" width="264.05" height="70" styleName="canvasMod" id="cnvFinCiclo">
		<mx:DateField id="dtfFinDesde" x="104.5" y="6" width="100" change="validaFechaFin()"/>
		<mx:DateField id="dtfFinHasta" x="104.5" y="38" width="100" change="validaFechaFin()"/>
		<mx:Label x="51.5" y="8" text="Desde:" width="45" textAlign="right"/>
		<mx:Label x="51.5" y="40" text="Hasta:" width="45" textAlign="right"/>
	</mx:Canvas>
	<mx:Label x="290" y="315" text="Situación" id="lblSituacion"/>
	<mx:Canvas x="290" y="334" width="264" height="149" styleName="canvasMod" id="cnvSituacion">
		<mx:CheckBox x="58" y="14" label="Autorizado por Cartera" id="chkSitCart" change="validaSituacion(event)"/>
		<mx:CheckBox x="58" y="38" label="Autorizado por Tesorería" id="chkSitTes" change="validaSituacion(event)"/>
		<mx:CheckBox x="58" y="62" label="Con Saldo" id="chkSitSaldo" change="validaSituacion(event)"/>
		<mx:CheckBox x="58" y="86" label="Liquidado" id="chkSitLiq" change="validaSituacion(event)"/>
		<mx:CheckBox x="58" y="110" label="Devuelto" id="chkSitDev" change="validaSituacion(event)"/>
	</mx:Canvas>
	<mx:Label x="290" y="227" text="Pagos" id="lblPagos"/>
	<mx:Canvas x="290" y="246" width="264" height="61" styleName="canvasMod" id="cnvPagos">
		<mx:DateField id="dtfPagos" x="107.5" y="19" width="100"/>
		<mx:Label x="54.5" y="21" text="Hasta:" width="45" textAlign="right"/>
	</mx:Canvas>
	<mx:Label x="18" y="403" text="Ciclos" id="lblCiclos"/>
	<mx:Canvas x="18" y="422" width="264" height="61" styleName="canvasMod" id="cnvCiclos">
		<mx:RadioButtonGroup id="ciclos" change="validaCiclos()" />
		<mx:RadioButton id="rdbTodosCiclos" x="64.5" y="5" label="Todos los Ciclos" height="23" width="108" groupName="ciclos" value="0"/>
		<mx:RadioButton id="rdbUltCiclo" x="64.5" y="31" label="Último Ciclo" height="23" width="133" groupName="ciclos" value="1"/>
	</mx:Canvas>
	<mx:Label x="290" y="34" text="Inicio del Ciclo" id="lblIniCiclo"/>
	<mx:Canvas x="290" y="53.5" width="264.05" height="70" styleName="canvasMod" id="cnvIniCiclo">
		<mx:DateField id="dtfIniDesde" x="104.5" y="6" width="100" change="validaFechaIni()"/>
		<mx:DateField id="dtfIniHasta" x="104.5" y="38" width="100" change="validaFechaIni()"/>
		<mx:Label x="51.5" y="8" text="Desde:" width="45" textAlign="right"/>
		<mx:Label x="51.5" y="38" text="Hasta:" width="45" textAlign="right"/>
	</mx:Canvas>
	<mx:Button id="btnGenerar" x="207.5" y="496" label="Generar" click="generar()"/>
	<mx:Button id="btnLimpiar" x="291.5" y="496" label="Limpiar" width="71" click="limpiar()"/>
</mx:Canvas>