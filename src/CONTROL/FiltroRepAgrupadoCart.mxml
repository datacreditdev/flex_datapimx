<?xml version="1.0" encoding="utf-8"?>
<mx:Canvas xmlns:mx="http://www.adobe.com/2006/mxml" width="580" height="450" 
	horizontalScrollPolicy="off" backgroundAlpha="1.0" backgroundColor="#FFFFFF" 
	creationPolicy="all" creationComplete="initApp()" xmlns:ns1="CONTROL.*">
	<mx:states>
		<mx:State name="noExporta">
			<mx:RemoveChild target="{btnExportar}"/>
			<mx:SetProperty name="height" value="470"/>
		</mx:State>
	</mx:states>
	 
	<mx:Metadata>
		[Event(name="enviar", type="enviar")]
	</mx:Metadata>
	
	<mx:Script>
		<![CDATA[
			import Data.ExcelExportXls;
			import Data.Globales;
			import Data.Utils;
			import mx.collections.ArrayCollection;
			import mx.core.Application;
			import mx.validators.Validator;		
			import mx.managers.PopUpManager;
			import mx.controls.Alert;
			import mx.effects.easing.Elastic;
			import mx.rpc.soap.WebService;
			import mx.rpc.events.ResultEvent;
			import mx.rpc.events.FaultEvent;
			import mx.utils.ObjectUtil;
			
			[Bindable]
			private var _xmlRep:XML =  new XML();
			private var _xmlTipoProd:XML = new XML();
		
			private var tipoProdObj:ArrayCollection;
			private var nivMoraObj:ArrayCollection;
			
			public var rep:String;
			private var du:Utils;
			private var global:Globales;
			private var titulo:String;
			
			public function cargaAsesor(ev:Event):void{
				habilitaControles(true);
				rdbAsesor.selected = true;
				if(ctrlFiltro.obtieneNumAsesores() == 1){
					rdbRegion.enabled = false;
					rdbSucursal.enabled = false;
				}
				if(ctrlFiltro.cboAsesor.selectedIndex == 0){
					rdbRegion.enabled = true;
					rdbSucursal.enabled = true;
				}	
				else{
					rdbRegion.enabled = false;
					rdbSucursal.enabled = false;
				}
			}		
			
			private function cargaNivMora():void{
			 	if(Application.application.PUESTO == "A"){
			 		cboNivelMora.selectedIndex = 2;
			 		cboNivelMora.enabled = false;
			 	}
			 	else{			 		
			 		cboNivelMora.selectedIndex = 0;
			 		cboNivelMora.enabled = true;
			 	}
			}
			
			private function cargaTitulo():String{
				var textoCart:String = "";
				var textoMora:String = "";
				
				if(chkCartVig.selected == true)
					textoCart = "CARTERA VIGENTE";
                if(chkCartVenc.selected == true)
                	textoCart = (textoCart != ""? textoCart + ", ":"") + "CARTERA VENCIDA";
                if(chkCartRest.selected == true)
			        textoCart = (textoCart != ""? textoCart + ", ":"") + "CARTERA REESTRUCTURADA";
			    if(chkCartCast.selected == true)	
			       	textoCart = (textoCart != ""? textoCart + ", ":"") + "CARTERA CASTIGADA";
			        	
			    if(cboNivelMora.selectedIndex > 0)
					textoMora = String(cboNivelMora.selectedItem.desc).toUpperCase();
					
				return textoCart + " " + textoMora;
			}
						
			public function enviar():void{
				dispatchEvent(new Event("enviar"));
			}
			
			private function exportar():void{
				var wsRep:WebService = new WebService;
				
				if (valida()){				
					var cartVig:int = Number(chkCartVig.selected); 
					var cartVenc:int = Number(chkCartVenc.selected);
					var cartRest:int = Number(chkCartRest.selected);
					//var cartCast:int = Number(chkCartCast.selected);
					var tipoProd:String = cboTipoProd.selectedItem.id;
					var nivelMora:String = cboNivelMora.selectedItem.id;
			
			        du.initWsRep(wsRep);
					du.sCursor();
					global.bloquear();
					
					du.ejecutaWsMethod(wsRep,function(evt:ResultEvent):void {											
						_xmlRep = new XML(evt.result.toString());
						
						du.rCursor();
						du.closeWs(wsRep);
						
						if(_xmlRep.elements().length() > 0){
							//Campo de equivalencias añadido para reporte de Situacion de Cartera
							if(rep == "1"){
								var cont:int = _xmlRep.elements().length()-1;
								var equivale:String;
								for (var i:int = 0 ; i <= cont ; i++){
									equivale =_xmlRep.dtMora[i].COD_GRUPO;
									_xmlRep.dtMora[i].EQUI = "0" + equivale.substring(1,3) + equivale.substring(0,1) + equivale.substring(3,6);
								}
							}
							exportarExcel(cargaTitulo());
						}
						else
							Alert.show("No se encontro información relacionada con los datos de consulta.",titulo,4,null,null,global.iAlert);
							
						global.desbloquear();
					
					});
					if(this.rep == "1"){
						wsRep.getRepMora.send(dtfFecha.text, nivel.selectedValue.toString(), cartVig, cartVenc, cartRest, global.obtenerUsuario(), 
											  global.obtenerNombreUsuario(), ctrlFiltro.obtieneRegion(), ctrlFiltro.obtieneSucursal(),
											  ctrlFiltro.obtieneAsesor(), tipoProd, nivelMora);
					}
					else if(this.rep == "4"){
						wsRep.getRepAntSaldos.send(dtfFecha.text, nivel.selectedValue.toString(), cartVig, cartVenc, cartRest, global.obtenerUsuario(), 
											       global.obtenerNombreUsuario(), ctrlFiltro.obtieneRegion(), ctrlFiltro.obtieneSucursal(), 
											       ctrlFiltro.obtieneAsesor());
					}
				}
			}		
			
			private function exportarExcel(texto:String = ""):void{
				var dgE:ExcelExportXls = new ExcelExportXls();
				if(rep == "1")
					dgE.loadDGInExcel(dgRepCart, null, titulo + " al " + dtfFecha.text + " " + texto);
				else if(rep == "4")		
					dgE.loadDGInExcel(dgRepBandas, null, "Antigüedad de Saldos al " + dtfFecha.text + " " + texto);
			}
			
			private function formateaDiasMora():void{
				var oItem:Object;
				var item:Array = new Array();
				
				oItem = new Object();
				oItem.id = "0";
				oItem.desc = "--Todos--";
				item.push(oItem);
				
				oItem = new Object();
				oItem.id = "1";
				oItem.desc = "Menor o Igual a 60 días de Mora";
				item.push(oItem);
				
				oItem = new Object();
                oItem.id = "2";
                oItem.desc = "Menor o Igual a 120 días de Mora";
                item.push(oItem);

				nivMoraObj = new ArrayCollection(item);	
			}
			
			private function formateaProd():void{
				var cont:int = _xmlTipoProd.elements().length();
				var oItem:Object;
				var item:Array = new Array();
				
				oItem = new Object();
				oItem.id = "0";
				oItem.nombre = "--Todos--";
				item.push(oItem);
				
				for(var i:int = 0; i < cont; i++){
					oItem = new Object();
					oItem.id = _xmlTipoProd.Table[i].CODIGO;
					oItem.nombre = _xmlTipoProd.Table[i].NOMBRE;
					item.push(oItem);
				}
				tipoProdObj = new ArrayCollection(item);			
			}
			
			public function generar():void{
				if (valida()){	
					if (rep == "-1")
						enviar();
					else if(rep != "-1"){				
						var consulta:String;
						var id:String = "&id=" + rep;
						var fecha:String = "&fecha=" + global.formatoFechaSep(dtfFecha.selectedDate,"-");
						var niv:String = "&nivel=" + nivel.selectedValue.toString();
						var strCartVig:String = "&cartVig=" + Number(chkCartVig.selected).toString();
						var strCartVenc:String = "&cartVenc=" + Number(chkCartVenc.selected).toString();
						var strCartRest:String = "&cartRest=" + Number(chkCartRest.selected).toString();
						//var strCartCast:String = "&cartCast=" + Number(chkCartCast.selected).toString();
						var usuario:String = "&usuario=" + global.obtenerUsuario();
						var nomUsuario:String = "&nomUsuario=" + global.obtenerNombreUsuario();
						var region:String = "&region=" + ctrlFiltro.obtieneRegion();
						var sucursal:String = "&sucursal=" + ctrlFiltro.obtieneSucursal();
						var asesor:String = "&asesor=" + ctrlFiltro.obtieneAsesor();
						var tipoProd:String = "&tipoProd=" + cboTipoProd.selectedItem.id;
						var nivelMora:String = "&nivelMora=" + cboNivelMora.selectedItem.id;
						var titulo:String = "&titulo=" + cargaTitulo();
						consulta = global.urlPdf + id + fecha + niv + strCartVig + strCartVenc + strCartRest + usuario + nomUsuario + region + sucursal + asesor + tipoProd + nivelMora + titulo;
						//consulta = global.urlPdf + id + fecha + niv + strCartVig + strCartVenc + strCartRest + strCartCast + usuario + nomUsuario + region + sucursal + asesor + tipoProd + nivelMora + titulo;
						//consulta = global.urlPdf + id + fecha + niv + strCartVig + strCartVenc + strCartRest + strCartCast + usuario + nomUsuario + region + sucursal + coord + asesor + tipoProd + titulo;					
						Application.application.muestraPdf(consulta);
					}
				}			
			}
			
			private function habilitaControles(estatus:Boolean):void{
				btnEnviar.enabled = estatus;
				btnExportar.enabled = estatus;
				btnLimpiar.enabled = estatus;
			}	
									
			public function init(rep:String, titulo:String, estado:String):void{
				var wsCat:WebService = new WebService;
				var params:Array = new Array;
				this.rep = rep;
				this.titulo = titulo;
				lblTitulo.text = titulo.toUpperCase();
				currentState = estado;
				formateaDiasMora();
				cboNivelMora.dataProvider = nivMoraObj;
				limpiar();
				
				du.initWsCat(wsCat);
				du.sCursor();
	
				du.ejecutaWsMethod(wsCat,function(evt:ResultEvent):void {											
					_xmlTipoProd = XML(evt.result.toString());
					
					du.rCursor();
					du.closeWs(wsCat);
					
					formateaProd();
					cboTipoProd.dataProvider = tipoProdObj;
				});
				params[0] = "";
				params[1] = "";
				params[2] = "";
				wsCat.getCatalogoGral.send(11, params)
			}		
						
			public function initApp():void{
				global = new Globales();
				du = new Utils();
				ctrlFiltro.addEventListener("cargaAsesor",cargaAsesor);
				ctrlFiltro.addEventListener("selecAsesor",seleccionaAsesor);
			}		
			
			public function limpiar():void{
				var fec:Date;
				habilitaControles(false);
				ctrlFiltro.init(false);
				ctrlFiltro.limpiar();
				fec = global.obtenerFechaSistema();
				dtfFecha.selectedDate = global.seleccionaDiaHabil(new Date(fec.fullYear,fec.month,fec.date - 1));
				nivel.selectedValue = 2;
				chkCartVig.selected = true;
				chkCartVenc.selected = true;
				chkCartRest.selected = true;
				//chkCartCast.selected =  true;
				rdbRegion.enabled = true;
				rdbSucursal.enabled = true;
				rdbAsesor.enabled = true;
				rdbAsesor.selected = true;
				cboTipoProd.selectedIndex = 0;
				cargaNivMora();
			}
			
			public function seleccionaAsesor(ev:Event):void{
				if(ctrlFiltro.cboAsesor.selectedIndex > 0){
					rdbRegion.enabled = false;
					rdbSucursal.enabled = false;
					rdbAsesor.selected = true;	
				}
				else{
					rdbRegion.enabled = true;
					rdbSucursal.enabled = true;
				}
			}
				
			private function valida():Boolean{
				if(dtfFecha.text == "" && currentState == null){
					Alert.show("Seleccione la fecha límite del reporte.",titulo,4,null,null,global.iAlert);
					return false;
				}
				if(nivel.selection == null){
					Alert.show("Seleccione el nivel de detalle del reporte.",titulo,4,null,null,global.iAlert);
					return false;
				}
				if(chkCartVig.selected == false && chkCartVenc.selected == false && 
				   chkCartRest.selected == false && chkCartCast.selected == false){
					Alert.show("Debe seleccionar al menos un Tipo de Cartera.",titulo,4,null,null,global.iAlert);
					return false;
				}
				return true;
			}
			
		]]>
	</mx:Script>
	<mx:Canvas x="299" y="140" width="264" height="67" styleName="canvasMod" id="canvas3">
		<mx:RadioButtonGroup id="nivel"/>
		<mx:RadioButton id="rdbRegion" x="43.5" y="5" label="Región" groupName="nivel" value="0"/>
		<mx:RadioButton id="rdbSucursal" x="151.5" y="5" label="Sucursal" groupName="nivel" value="1"/>
		<mx:RadioButton id="rdbAsesor" x="43.5" y="31" label="Asesor" groupName="nivel" value="2"/>	
	</mx:Canvas>
	<mx:Label x="299" y="121" text="Nivel de detalle" id="label3"/>
	<mx:Label id="lblTitulo" x="18" y="10" width="247" fontSize="12" fontWeight="bold" fontStyle="italic"/>
	<mx:Canvas x="17.95" y="53.5" width="264.05" height="170" styleName="canvasMod" id="canvas2">
		<ns1:CtrlFiltroInfoAsesor id="ctrlFiltro" x="6" y="10"/>
	</mx:Canvas>
	<mx:Canvas x="18" y="232" width="264" height="50" styleName="canvasMod" id="canvas1">
		<mx:Label x="27.5" y="14" text="Fecha reporte:" id="label1"/>
		<mx:DateField id="dtfFecha" x="111.5" y="13" width="111"/>
	</mx:Canvas>
	<mx:Button x="207.5" y="376" label="Generar" click="generar()" id="btnEnviar"/>
	<mx:Button x="304.5" y="376" label="Limpiar" click="limpiar()" id="btnLimpiar"/>
	<mx:Label x="18" y="34" text="Criterios de Selección" width="124.25" id="label2"/>
	<mx:Canvas x="299" y="53" width="264" height="60" styleName="canvasMod" id="canvas4">
		<mx:CheckBox id="chkCartVig" x="19" y="6" label="Vigente" height="23" width="108"/>
		<mx:CheckBox id="chkCartCast" x="135" y="29" label="Castigada" height="23" width="108" visible="false"/>
		<mx:CheckBox id="chkCartRest" x="19" y="30" label="Reestructurada" height="23" width="108"/>
		<mx:CheckBox id="chkCartVenc" x="135" y="6" label="Vencida" height="23" width="108"/>
	</mx:Canvas>
	<mx:Label x="299" y="34" text="Tipo de Cartera" id="label0"/>
	<mx:Button x="238.5" y="412" label="Exportar Excel" click="exportar()" id="btnExportar"/>
	<mx:DataGrid id="dgRepCart" dataProvider="{_xmlRep.dtMora}" x="310" y="22" width="548" visible="false" 
		horizontalScrollPolicy="on">
		<mx:columns>
			<mx:DataGridColumn headerText="TIPO PRODUCTO" dataField="TIPOPROD"/>
			<mx:DataGridColumn headerText="COD_REGIONAL" dataField="COD_REGIONAL"/>
			<mx:DataGridColumn headerText="REGIONAL" dataField="REGIONAL"/>
			<mx:DataGridColumn headerText="COD_SUCURSAL" dataField="COD_SUCURSAL"/>
			<mx:DataGridColumn headerText="SUCURSAL" dataField="SUCURSAL"/>
			<mx:DataGridColumn headerText="COD_COORDINADOR" dataField="COD_COORD"/>
			<mx:DataGridColumn headerText="COORDINADOR" dataField="COORDINADOR"/>
			<mx:DataGridColumn headerText="COD_ASESOR" dataField="COD_ASESOR"/>
			<mx:DataGridColumn headerText="ASESOR" dataField="OF_CREDITO"/>
			<mx:DataGridColumn headerText="CODIGO" dataField="COD_GRUPO"/>
			<mx:DataGridColumn headerText="EQUIVALENCIA" dataField="EQUI"/>
			<mx:DataGridColumn headerText="NOMBRE" dataField="GRUPO"/>
			<mx:DataGridColumn headerText="CICLO" dataField="CICLO"/>
			<mx:DataGridColumn headerText="INICIO" dataField="INICIO"/>
			<mx:DataGridColumn headerText="FIN" dataField="FEC_FIN"/>
			<mx:DataGridColumn headerText="TASA" dataField="TASA"/>
			<mx:DataGridColumn headerText="CANT_ENTREGADA" dataField="CANT_ENTRE"/>
			<mx:DataGridColumn headerText="INTERES" dataField="TOTAL_PAGAR"/>
			<mx:DataGridColumn headerText="SALDO_CAPITAL" dataField="SALDO_CAP"/>
			<mx:DataGridColumn headerText="SALDO_TOTAL" dataField="SALDO_TOTAL"/>
			<mx:DataGridColumn headerText="PARCIALIDAD" dataField="PARCIALIDAD"/>
			<mx:DataGridColumn headerText="PERIODOS" dataField="PERIO_TRANS"/>
			<mx:DataGridColumn headerText="FEC_ULT_PAGO" dataField="FEC_ULT_PAGO"/>
			<mx:DataGridColumn headerText="MONTO_ULT_PAGO" dataField="MONTO_ULT_PAGO"/>
			<mx:DataGridColumn headerText="MORA_CAPITAL" dataField="MORA_CAP"/>
			<mx:DataGridColumn headerText="MORA_TOTAL" dataField="MORA_TOTAL"/>
			<mx:DataGridColumn headerText="DIAS_MORA" dataField="DIAS_MORA"/>
			<mx:DataGridColumn headerText="SALDO_GARANTIA" dataField="SALDO_GL"/>
			<mx:DataGridColumn headerText="INTEGRANTES" dataField="NUM_INTEG"/>
			<mx:DataGridColumn headerText="TIPO CARTERA" dataField="TIPO_CART"/>
			<mx:DataGridColumn headerText="CODIGO DESPACHO" dataField="CODIGO_DESPACHO"/>
			<mx:DataGridColumn headerText="NOMBRE DESPACHO" dataField="NOMBRE_DESPACHO"/>
		</mx:columns>
	</mx:DataGrid>
	<mx:DataGrid id="dgRepBandas" dataProvider="{_xmlRep.dtBandas}" x="310" y="22" width="548" visible="false" 
		horizontalScrollPolicy="on">
		<mx:columns>
			<mx:DataGridColumn headerText="COD_REGIONAL" dataField="COD_REGIONAL"/>
			<mx:DataGridColumn headerText="REGIONAL" dataField="REGIONAL"/>
			<mx:DataGridColumn headerText="COD_SUCURSAL" dataField="COD_SUCURSAL"/>
			<mx:DataGridColumn headerText="SUCURSAL" dataField="SUCURSAL"/>
			<mx:DataGridColumn headerText="COD_COORDINADOR" dataField="COD_COORD"/>
			<mx:DataGridColumn headerText="COORDINADOR" dataField="COORDINADOR"/>
			<mx:DataGridColumn headerText="COD_ASESOR" dataField="COD_ASESOR"/>
			<mx:DataGridColumn headerText="ASESOR" dataField="OF_CREDITO"/>
			<mx:DataGridColumn headerText="COD_GRUPO" dataField="COD_GRUPO"/>
			<mx:DataGridColumn headerText="NOMBRE_GRUPO" dataField="GRUPO"/>
			<mx:DataGridColumn headerText="CICLO" dataField="CICLO"/>
			<mx:DataGridColumn headerText="INICIO" dataField="INICIO"/>
			<mx:DataGridColumn headerText="SALDO_TOTAL" dataField="SALDO_TOTAL"/>
			<mx:DataGridColumn headerText="MORA_TOTAL" dataField="MORA_TOTAL"/>
			<mx:DataGridColumn headerText="7" dataField="MORA_7"/>
			<mx:DataGridColumn headerText="15" dataField="MORA_15"/>
			<mx:DataGridColumn headerText="30" dataField="MORA_30"/>
			<mx:DataGridColumn headerText="60" dataField="MORA_60"/>
			<mx:DataGridColumn headerText="90" dataField="MORA_90"/>
			<mx:DataGridColumn headerText="120" dataField="MORA_120"/>
			<mx:DataGridColumn headerText=">120" dataField="MORA_SUP_120"/>
			<mx:DataGridColumn headerText="MORATORIOS" dataField="MORATORIOS"/>
			<mx:DataGridColumn headerText="SALDO_GARANTIA" dataField="SALDO_GL"/>
		</mx:columns>
	</mx:DataGrid>
	<mx:Label x="299" y="213" text="Tipo de Producto" id="lblProducto"/>
	<mx:Canvas x="299" y="232" width="264" height="50" styleName="canvasMod1" id="cnvTipoProd1" borderStyle="solid" cornerRadius="10" borderColor="#A5A7A9">
		<mx:ComboBox id="cboTipoProd" x="46" y="11" labelField="nombre" width="170"/>
	</mx:Canvas>
	<mx:Label x="299" y="290" text="Días de Mora" id="lblDiasMora" visible="true"/>
	<mx:Canvas x="299" y="309" width="264" height="50" styleName="canvasMod1" id="cnvDiasMora" borderStyle="solid" cornerRadius="10" borderColor="#A5A7A9" visible="true">
		<mx:ComboBox id="cboNivelMora" x="26" y="12" labelField="desc" width="210"/>
	</mx:Canvas>
</mx:Canvas>