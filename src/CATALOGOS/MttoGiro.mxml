<?xml version="1.0" encoding="utf-8"?>
<mx:TitleWindow xmlns:mx="http://www.adobe.com/2006/mxml" layout="absolute" width="420" height="220" xmlns:Data="Data.*">
	
	<mx:Validator id="codigoV" source="{txtCodigo}" property="text" 
	invalid="{txtCodigo.setFocus()}" triggerEvent="" requiredFieldError="Giro Requerido"/>
	
	<mx:Validator id="nombreV" source="{txtNombre}" property="text" 
	invalid="{txtNombre.setFocus()}" triggerEvent="" requiredFieldError="Nombre Requerido"/>
		
	<mx:Script>
		<![CDATA[
		import Data.DatosGiro;
		import Data.EventGiro;
		import Data.Globales;
		import Data.Utils;
		import mx.collections.ArrayCollection;
		import mx.controls.Alert;
		import mx.core.Application;
		import mx.effects.*;
		import mx.events.EffectEvent;
		import mx.managers.PopUpManager;
		import mx.rpc.events.ResultEvent;
		import mx.rpc.soap.WebService;
		import mx.validators.Validator;	
		import mx.events.ValidationResultEvent;
		
		[Bindable]
		private var info:DatosGiro;
		[Bindable]
		private var _xmlGiro:XML =  new XML();
		
		public var openEffect:Effect = new WipeDown();
		public var closeEffect:Effect = new WipeDown();
		public var wsMS:WebService;	
		public var wsCat:WebService;
		public var tipoAccion:int;
		public var titulo:String;
		private var global:Globales;
		private var du:Utils;
		private var vResult:ValidationResultEvent;
		
		public function cargaInfoGiro(tipo:int, codSec:String, sector:String, codigo:String):void{
			var params:Array = new Array;
			wsCat = new WebService;
			tipoAccion = tipo; 
			this.title = "EdiciÃ³n";
			//Datos de la Linea de Credito
			info.cdgSec = codSec;
			info.codigo = codigo;
			
			du.initWsCat(wsCat);
			du.sCursor();
			
			du.ejecutaWsMethod(wsCat,function(evt:ResultEvent):void {											
				_xmlGiro = new XML(evt.result.toString()); 
					
				du.rCursor();
				du.closeWs(wsCat);
					
				if (_xmlGiro.elements().length() > 0){
					llenaRegistros();
				} 	
			});
			params[0] = codSec;
			params[1] = codigo;
			wsCat.getInfoRegistro.send(35, params);
		}
		
		public function cerrar():void{
			var playReverse:Boolean = true;   
            closeEffect.duration = 500;
            closeEffect.play([this], playReverse);
            closeEffect.addEventListener(EffectEvent.EFFECT_END, terminarEfecto);
		}
	
		public function enviar():void{
			var invalidArray:Array = Validator.validateAll([codigoV, nombreV]);
				
			if(invalidArray.length == 0){	
				var i:int;
				info.codigo = txtCodigo.text;
				info.nombre = txtNombre.text;
				info.guarda = true;
			}
			else{
				info.guarda = false;
			}
			validaFinal();
		}
			
		public function guardaGiro():void{
			initConexion();
			du.sCursor();
			global.bloquear();
			wsMS.addEventListener(ResultEvent.RESULT, setAccionGiro);
			wsMS.setAccionGiro.send(tipoAccion, info.cdgSec, info.codigo, info.nombre, global.obtenerUsuario());	
		}
	
		public function init(tipo:int, codSec:String, sector:String, codigo:String = null):void{
			global = new Globales(); 
			du = new Utils();
			info = new DatosGiro();
			titulo = "Mantenimiento de Giro";
			txtCodSec.text = codSec;
			txtSector.text = sector;
			//Codigo que permite ejecutar el efecto de apertura
			openEffect.duration = 1000;
			openEffect.play([this]);
			
			if(tipo == 1)
		 		registraInfoGiro(tipo, codSec, sector); 
		 	else if(tipo == 2){
		 		cargaInfoGiro(tipo, codSec, sector, codigo);
		 	}
				
		}
		
		public function initConexion():void{				
			wsMS = new WebService();			
			wsMS.wsdl = Application.application.wsStr.wsdlServ.toString();
			wsMS.loadWSDL();
		}	
		
		public function llenaRegistros():void{
			var i:int;
			txtCodigo.setFocus();
			
			txtCodigo.text = info.codigo;
			txtNombre.text = _xmlGiro.Table[0].NOMBRE;
		}
			
		public function registraInfoGiro(tipo:int, codSec:String, sector:String):void{
			tipoAccion = tipo;
			this.title = "Nuevo";
			info.cdgSec = codSec;
			
			txtCodigo.setFocus();	
		}
		
		private function setAccionGiro(event:ResultEvent):void{
			wsMS.disconnect();
			du.rCursor();
			global.desbloquear();
			wsMS.removeEventListener(ResultEvent.RESULT, setAccionGiro);
			var res:String = event.result.toString();
			if (res.substr(0,1) == "1"){
				cerrar();
			}	
			else
				du.mostrarMensaje(res.substr(2,res.length -1),titulo,4,null,null,global.iAlert);		
		}
		
		public function terminarEfecto(event:EffectEvent):void{
			closeEffect.removeEventListener(EffectEvent.EFFECT_END, terminarEfecto);
			PopUpManager.removePopUp(this);
		}
		
		public function validaDatosGiro(event:EventGiro):void{
			info = event.customProp;
		}
		
		public function validaFinal():void{
			if (info.guarda == true)
				guardaGiro();
			else
				du.mostrarMensaje("Debe capturar los datos requeridos",titulo,4,null,null,global.iAlert);
		}
				
		]]>
	</mx:Script>
	
	<mx:NumberValidator id="numVal" property="text" precision="2" required="false"
        allowNegative="true" domain="real" decimalSeparator="." thousandsSeparator=","/>
	
	<mx:Canvas x="20.5" y="10" width="375" height="40" styleName="canvasMod">
		<mx:Label id="lblSector" x="37.5" y="8" text="Sector:"/>
		<mx:TextInput id="txtCodSec" x="85.5" y="7" width="50" editable="false"/>
		<mx:TextInput id="txtSector" x="143.5" y="7" width="221" editable="false"/>
	</mx:Canvas>
	<mx:Button id="btnAceptar" x="162" y="146" icon="@Embed(source='assets/button_ok.png')" click="enviar()" width="40"/>
	<mx:Button id="btnCancelar" x="210" y="146" icon="@Embed(source='assets/Icon-Delete.png')" click="cerrar()" width="40"/>
	<mx:Canvas x="20.5" y="58" width="375" height="80" styleName="canvasMod">
		<mx:Label id="lblNombre" x="18" y="41" text="Nombre:"/>
		<mx:Label id="lblCodigo" x="35" y="11" text="Giro:"/>
		<mx:TextInput id="txtCodigo" x="71" y="10" width="50"/>
		<mx:TextInput id="txtNombre" x="71" y="40" width="292" maxChars="200"/>
	</mx:Canvas>
</mx:TitleWindow>